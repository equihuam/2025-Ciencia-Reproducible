{
  "hash": "1ee13b7653150573b77c0db45e678270",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(RPostgres, keyring)\n\n\ntryCatch({\n  drv <- Postgres()\n  print(\"Connecting to Database…\")\n  connec <- dbConnect(drv, \n                      dbname =   \"dvdrental\",\n                      host =     Sys.getenv(\"psql_eq_ip\"), \n                      port =     Sys.getenv(\"psql_eq_port\"),\n                      user =     key_list(\"psql-eq\")[1,2],\n                      password = key_get(service = \"psql-eq\", \n                                                  username = key_list(\"psql-eq\")[1,2]))\n  \n  print(\"Database Connected!\")\n},\nerror=function(cond) {\n  print(cond)\n  print(\"Unable to connect to Database.\")\n})\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Connecting to Database…\"\n[1] \"Database Connected!\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndf <- dbGetQuery(connec, \"SELECT first_name, last_name FROM actor\")\n\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  first_name    last_name\n1   Penelope      Guiness\n2       Nick     Wahlberg\n3         Ed        Chase\n4   Jennifer        Davis\n5     Johnny Lollobrigida\n6      Bette    Nicholson\n```\n\n\n:::\n\n```{.r .cell-code}\ndbDisconnect(connec)\n```\n:::\n\n\n\n\n\n\n\n\n\n\n## Preparar WSL y PostgreSQL en Windows\n\nAhora Windows incluye la opción de habilitar una versión de linux virtual que convive con el ambiente Windows, la característica que denomina [_Windows Subsystem Linux_ (**WSL**)](https://learn.microsoft.com/es-mx/windows/wsl/). Hay que habilitarlo desde la panel de control como _características de Windows_ como se ilustra en la  @fig-wsl, o mediante comandos desde una ventana de **Powershell** de la manera siguiente.\n\n```{.bash}\n\nwsl --install\nwsl --version\nwsl --install -d ubuntu\n\n```\n\nUna vez activado **WSL**, tendrás, en este ejemplo, un _linux Ubuntu_ en marcha y para acceder a su consola de sistema bastará con que escribas `wsl`en una terminal de **Powershell**, que puede ser la misma que usaste para instalar todo. \n\n\nEn una ventana de _Powershell_ escribir\n\n```{.bash}\n\n\nsudo apt-get install postgresql postgresql-contrib\n\n```\n\nPara iniciar tu interacción con PostgreSQL incialmente necesitará entrar a la interfaz del sistema con el siguiente comando.\n\n```{.bash}\n\nsudo -u postgres psql\n\nsudo -u postgres createuser <username>\n\nsudo -u postgres createdb <dbname>\n\n$ sudo -u postgres psql\npsql=# alter user <username> with encrypted password '<password>';\ngrant all privileges on database <dbname> to <username> ; \n\n```",
    "supporting": [
      "postgres-ejemplo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}
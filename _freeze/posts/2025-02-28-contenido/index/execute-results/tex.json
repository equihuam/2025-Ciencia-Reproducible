{
  "hash": "51d1fd58983aa1be7e015609fcebede3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"¿Qúe puedo incluir en mis documentos?\"\nauthor: \"Miguel Equihua\"\nimage: \"images/Image by Mojca-Peter from Pixabay - seeds-1217133_1280.jpg\"\nlang: es\ndate: 28/feb/2025\n\ncategories: [mapas, tablas, gráficas, galería]\n\ncode-fold: true\ncode-summary: \"muestra el escript:\"\nfig-cap-location: top\n---\n\n\n\n\n\n\n\n\n\n## Visita a la galería de Quarto\n\n\n\n\n\n\n\n\n```{=html}\n<iframe width=\"780\" height=\"500\" \n        src=\"https://quarto.org/docs/gallery/\" title=\"Webpage example\"\n        style=\"border:5px solid brown;\"\n   >\n</iframe>\n```\n\n\n\n\n\n\n\n\n\n## Platiquemos sobre tus intereses\n\nTu Blog contendrá alguno o varios de los siguientes componentes:\n\n+ Tablas de datos.\n+ Gráficas.\n+ Mapas.\n+ Análisis de datos geográficos.\n+ Análisis de series de tiempo.\n+ Modelos matemáticos.\n+ Análisis estadísticos.\n+ Análisis de datos moleculares.\n+ Análisis de imágenes.\n+ Análisis de audio.\n+ Alguna otra cosa que sea de tu interés.\n\nSugiero hacer una reflexión sobre esto y considerar también de qué manera se obtendrán los datos, procesarán y presentarán.\n\n### Algunas ideas para animar la charla\n\nrvest helps you scrape (or harvest) data from web pages. It is designed to work with magrittr to make it easy to express common web scraping tasks, inspired by ...\n\n\n## Obtención de Datos Abiertos\n\nLas fuentes de datos, especialmente hoy, pueden ser muy variadas. Desde los datos que conseguimos directamente en campo a partir de mediciones directas o encuestas, hasta los datos que podemos obtener de *fuentes de datos abiertos*. Considero que será de tu interés explorar las distintas formas de interacción que las fuentes de datos implican para nuestros procesos de producción *científica reproducible*.\n\n![](img/Escalera-Open%20Access.png)\n\n### Manejo de claves confidenciales\n\nUn tema importante a cuidar es preservar la confidencialidad de claves, **tokens** y otras formas de identificación personal que puede implicar el proceso de acceso a datos en línea. Así que veremos eso como primer asunto. Queda claro que debemos evitar por todos los medios evitar poner esa información en carpetas o código que pueden acabar siendo registradas en Github en nuestro repositorio público. Haberte vacunado con `usethis::git_vaccinate()` ayuda en gran medida, pero desde luego no es remplazo a estar atentos a lo que estamos haciendo. La estrategia de registro de datos confidenciales que te propongo es la biblioteca `keyring`. Esta biblioteca accede al sistema de almacenamiento de credenciales de tu máquina desde *R*. La describen como una **API** *Independiente de la Plataforma* para acceder al depósito de credenciales del sistema operativo de tu máquina. [Este sitio explica que es una API (Application Programming Interface)](https://aws.amazon.com/es/what-is/api/). Actualmente `keyring` soporta: **Keychain** en *macOS*, **Credential Store** wn *Windows*, **the Secret Service API** en *Linux*, soluciones simples (sin plataforma específica) desarrollados con variables de sistema o archivos encristalados e incluso ofrece la posibilidad de desarrollar algunas soluciones propias con sencillez. En nuestro caso, básicamente usaremos dos funciones de esta biblioteca. Primero y desde la pantalla de **Consola** ejecuta:\\\n\n``` r\nkey_set(service = \"[dale un nombre]\", username = \"[el que desees]\")\n```\n\n\\\n\nEsto hará el registro de tus credenciales en tu máquina, fuera de la vista. A partir de ese momento y mientras no elimines el registro explícitamente, estarán disponibles los datos que hayas registrado y los podrás obtener con:\\\n\n``` r\nkey_get(service = \"[dale un nombre]\", username = \"[el que desees]\")\n```\n\n\\\n\nEsta última línea recupera los datos confidenciales, así que deberás cuidar usar las credenciales de inmediato y procurar no guardarlas y menos desplegarlas o habilitar medios para mostrarlas, durante el proceso.\n\nVeamos un primer ejemplo con **INEGI**. Te sugiero ir a <https://www.inegi.org.mx/servicios/api_indicadores.html> al constructor de consultas, en donde **INEGI** nos muestra un ejemplo de como acceder a los datos abiertos que *compilan*, *mantienen* y *custodian*. Deberás obtener un **token** personal, el mismo sitio de **INEGI** te dirá como obtenerlo. El ejemplo muestra como obtener datos de la **serie histórica** del indicador de la **Población total** de los Estados Unidos Mexicanos, en idioma español, en formato *JSON*. Una vez que los obtengamos mostraremos los datos en tablas y gráficas.\n\n![](img/API.png)\n\nLo primero que haremos es preparar el acceso a los datos con el **token** confidencial y obtenemos los datos, sin haber registrado la *URL* de acceso, pues como viste arriba, incluye tu **token**, así que habrá que manejarla con seguridad. El resultado de este *código* es una estruuctra de datos que ya no contiene información confidencial.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLa siguiente tarea que haremos ahora es simplemente arreglar los datos y ponerlos de la manera que requiero. Los datos son actualmente una base de datos *JSON*, que es una estructura parecida a un diccionario jerárquico, que tiene una etiqueta seguida de los datos que le corresponden. Aquí te muestro un fragmento de los datos de **INEGI** que obtuvimos. Es la sección etiquetada como *Header*. Podemos ver que esta etiqueta tiene como contenido los datos *Name* y *email*, a su vez con sus respectivos datos.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndescrip <- fromJSON(datosGenerales[[1]])$Header\nprettify(toJSON(descrip))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n{\n    \"Name\": \"Datos compactos BISE\",\n    \"Email\": \"atencion.usuarios@inegi.org.mx\"\n}\n \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\\\n\nAhora haremos algunas operaciones para arreglar los datos del *JSON* en una tabla de tipo *data.frame* (*tibble* si optamos por una variante actual) en *R*. Los datos que nos interesan son los que están en la etiqueta *Series* y dentro de estas *Series* están las listas de *OBSERVATIONS*, que en este caso son 15.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# junta todo en un gran texto corrido\nflujoDatos <- paste(datosGenerales, collapse = \" \") \n\n# Obtiene la lista de observaciones \nflujoDatos <- fromJSON(flujoDatos) # Convierte al JSON a una lista de R\nflujoDatos <- flujoDatos$Series # Toma la sublista Series \nflujoDatos <- flujoDatos[[1]][\"OBSERVATIONS\"]\n\ncat(\"\\nNúmero de observaciones: \", length(flujoDatos[[1]]),\n    \"\\n\\nDatos en cada observación:\\n\",\n    paste(\"   \", names(flujoDatos[[1]][[1]]), collapse = \"\\n\"), sep = \"\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nNúmero de observaciones: 15\n\nDatos en cada observación:\n    TIME_PERIOD\n    OBS_VALUE\n    OBS_EXCEPTION\n    OBS_STATUS\n    OBS_SOURCE\n    OBS_NOTE\n    COBER_GEO\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\nAhora convierto lista de listas en un tabla con los datos de población y año de censado.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- flujoDatos[[1]] %>% \n      sapply(., c) %>% \n      t() %>% \n      as_tibble() %>% \n      select(TIME_PERIOD, OBS_VALUE) %>% \n      mutate(TIME_PERIOD = as.integer(TIME_PERIOD),\n             OBS_VALUE = as.integer(OBS_VALUE))\n\n\ndf1 %>% flextable() %>% \n        colformat_int(j = 1, big.mark = \"\") %>% \n        set_header_labels(TIME_PERIOD = \"Año\", OBS_VALUE = \"Población\")\n```\n\n::: {.cell-output-display}\n\n```{=latex}\n\\global\\setlength{\\Oldarrayrulewidth}{\\arrayrulewidth}\n\n\\global\\setlength{\\Oldtabcolsep}{\\tabcolsep}\n\n\\setlength{\\tabcolsep}{2pt}\n\n\\renewcommand*{\\arraystretch}{1.5}\n\n\n\n\\providecommand{\\ascline}[3]{\\noalign{\\global\\arrayrulewidth #1}\\arrayrulecolor[HTML]{#2}\\cline{#3}}\n\n\\begin{longtable}[c]{|p{0.75in}|p{0.75in}}\n\n\n\n\\ascline{1.5pt}{666666}{1-2}\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{Año}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{Población}}}} \\\\\n\n\\ascline{1.5pt}{666666}{1-2}\\endfirsthead \n\n\\ascline{1.5pt}{666666}{1-2}\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{Año}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{Población}}}} \\\\\n\n\\ascline{1.5pt}{666666}{1-2}\\endhead\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{1910}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{15,160,369}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{1921}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{14,334,780}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{1930}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{16,552,722}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{1940}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{19,653,552}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{1950}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{25,791,017}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{1960}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{34,923,129}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{1970}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{48,225,238}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{1980}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{66,846,833}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{1990}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{81,249,645}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{1995}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{91,158,290}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{2000}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{97,483,412}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{2005}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{103,263,388}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{2010}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{112,336,538}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{2015}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{119,938,473}}}} \\\\\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{2020}}}} & \\multicolumn{1}{>{\\raggedleft}m{\\dimexpr 0.75in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\global\\setmainfont{Arial}{126,014,024}}}} \\\\\n\n\\ascline{1.5pt}{666666}{1-2}\n\n\n\n\\end{longtable}\n\n\n\n\\arrayrulecolor[HTML]{000000}\n\n\\global\\setlength{\\arrayrulewidth}{\\Oldarrayrulewidth}\n\n\\global\\setlength{\\tabcolsep}{\\Oldtabcolsep}\n\n\\renewcommand*{\\arraystretch}{1}\n```\n\n:::\n:::\n\n\n\n\n\n\n\n\nAhora podemos ver los datos como una gráfica apropiada para pulicación. Nos ayudará la biblioteca `ggplot2`\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(df1, aes(x = TIME_PERIOD, y = OBS_VALUE / 1000000)) +\n  geom_point(color = \"red\", size = 3, show.legend = FALSE) +\n  geom_line(color = \"blue\", show.legend = FALSE) +\n  ylab(\"Población (millones de habitantes)\") +\n  xlab(\"Año\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-5-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n\n\n## Contar historias con números\n\nEsta es una tarea usualmente complicada. A lo mejor la lectura de lo que propone [Stephen Few](https://www.perceptualedge.com/articles/visual_business_intelligence/statistical_narrative.pdf), nos puede ayudar a profundizar esta reflexión.",
    "supporting": [
      "index_files\\figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "\\usepackage{fontspec}\n\\usepackage{multirow}\n\\usepackage{multicol}\n\\usepackage{colortbl}\n\\usepackage{hhline}\n\\newlength\\Oldarrayrulewidth\n\\newlength\\Oldtabcolsep\n\\usepackage{longtable}\n\\usepackage{array}\n\\usepackage{hyperref}\n\\usepackage{float}\n\\usepackage{wrapfig}\n"
      ]
    },
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}
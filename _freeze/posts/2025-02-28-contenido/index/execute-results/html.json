{
  "hash": "93ee21bdc4ace2a5c059aa4d05a02f40",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"¿Qúe puedo incluir en mis documentos?\"\nauthor: \"Miguel Equihua\"\nimage: \"img/Image by Pete Linforth from Pixabay-ai-generated-8411278_1280.jpg\"\nlang: es\ndate: 28/feb/2025\n\ncategories: [mapas, tablas, gráficas, galería]\n\ncode-fold: true\ncode-summary: \"muestra el escript:\"\nfig-cap-location: top\n\nformat: \n  html:\n    toc: true\n---\n\n\n\n## Visita la galería de Quarto\n\n\n\n```{=html}\n<iframe width=\"780\" height=\"500\" \n        src=\"https://quarto.org/docs/gallery/\" title=\"Webpage example\"\n        style=\"border:5px solid brown;\"\n   >\n</iframe>\n```\n\n\n\n## Platiquemos sobre tus intereses\n\nTu Blog contendrá alguno o varios de los siguientes componentes:\n\n-   Tablas de datos.\n-   Gráficas.\n-   Mapas.\n-   Análisis de datos geográficos.\n-   Análisis de series de tiempo.\n-   Modelos matemáticos.\n-   Análisis estadísticos.\n-   Análisis de datos moleculares.\n-   Análisis de imágenes.\n-   Análisis de audio.\n-   Alguna otra cosa que sea de tu interés.\n\nSugiero hacer una reflexión sobre esto y considerar también de qué manera se obtendrán los datos, procesarán y presentarán.\n\n### Algunas ideas para animar la charla\n\nUna cosa que podría ser de tu interés es *cosechar datos* del Internet. **R** tiene bibliotecas bbastante competenes para hacerlo, pero te invito primero a pensarlo y precisar la idea, para entonces dedicar alguna sesión del taller en el futuro próximo all tema. Junto con esto va una reflexión sobre *datos abiertos* que tengo previsto tratar y junto con esto alguunos asuntos sobre derechos de autor y licenciamiento del contenido que tu mismo producirás. En tanto resolvemos esta interés, una cosa más sencilla es trabajar con datos que ya tengo en mi poseción, es decir un Excel o documento semejante en mi máquina.\n\n## Datos en Mi equipo\n\nObviamente, la forma más sencilla de acceder a datos es cuando los tenemos en nuestro propio equipo. En este caso lo usual es que sea alguno de los formatos de Microsoft (Word o Excel) o algún formato genérico como los identificados como **txt** (*texto plano*) o **csv** (*valores separados por comas*). Puuede haber otras variantes de archivos de datos, como **kml**, **GeoJson**, **GeoTIFF** o **shp** (*shape file*) usuales en la gestión de *datos geográficos*. En Genómica está el formato **fasta**, que también cuenta con bibliotecas adecuadas en *R*. Hay una correspondiente variedad de recursos para leer todos estos tipos de datos en *R* así como para analizarlos y preparar resúmenes, modelos y gráficos de interés. A continuación veremos algunos ejemplos sencillos para tener una idea del proceso general. Para nuestros fines didácticos veamos como leer datos de Excel.\n\n### Datos Excel\n\nTengo este archivo de datos obtenidos por D.L. Cunningham de la Universidad de Cornell. Son registros de masa corporal (g) de pollos de acuerdo con su posición en la *jerarquía de picotazos* (@tbl-pollos). Veamos los datos. En el procceso dde demostración también te comparto como construir una tabla en formato *publicable* con la biblioteca `flextable`. Otra posibilidad para trabajar tablas es la biblioteca `DT`, más orientada a construir tablas que serán utilizadas en forma interactiva.\n\n[Aquí están los datos](https://docs.google.com/spreadsheets/d/101en_5PHLLg0T6L7HtonPzxZ7SbjSH4S/edit?usp=sharing&ouid=117903674529989673913&rtpof=true&sd=true)\n\n\n\n::: {#tbl-pollos .cell tbl-cap='Jearquía de Picotazos'}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggplot2, readxl, flextable)\n\npollos_peso <- read_excel(\"datos/peck_odr.xls\", skip = 2)\n\npollos_peso |>\n  flextable() |> \n  width(j = 2:8, width = 25, unit = \"mm\") |> \n  set_header_labels(\"Jerarquía\\npor picoteo\" = \"Posición\",\n                    gallinero = \"Gallinero\",\n                    peso = \"Peso\\n(g)\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-3bac2cca{}.cl-3ba4e140{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-3ba7fa24{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-3ba812b6{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3ba812b7{width:0.984in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3ba812c0{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3ba812c1{width:0.984in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3ba812c2{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3ba812ca{width:0.984in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-3bac2cca'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-3ba812b6\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">Posición</span></p></th><th class=\"cl-3ba812b7\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">Gallinero 1</span></p></th><th class=\"cl-3ba812b7\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">Gallinero 2</span></p></th><th class=\"cl-3ba812b7\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">Gallinero 3</span></p></th><th class=\"cl-3ba812b7\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">Gallinero 4</span></p></th><th class=\"cl-3ba812b7\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">Gallinero 5</span></p></th><th class=\"cl-3ba812b7\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">Gallinero 6</span></p></th><th class=\"cl-3ba812b7\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">Gallinero 7</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3ba812c0\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,880</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,300</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,600</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,380</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,800</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,000</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,680</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3ba812c0\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">2</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,920</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,700</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,830</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,520</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,780</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,740</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,460</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3ba812c0\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">3</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,600</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,500</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,520</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,520</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,360</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,520</span></p></td><td class=\"cl-3ba812c1\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,760</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3ba812c2\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">4</span></p></td><td class=\"cl-3ba812ca\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,830</span></p></td><td class=\"cl-3ba812ca\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,880</span></p></td><td class=\"cl-3ba812ca\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,820</span></p></td><td class=\"cl-3ba812ca\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,380</span></p></td><td class=\"cl-3ba812ca\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">2,000</span></p></td><td class=\"cl-3ba812ca\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">2,000</span></p></td><td class=\"cl-3ba812ca\"><p class=\"cl-3ba7fa24\"><span class=\"cl-3ba4e140\">1,800</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\nLos datos están en un formato poco conveniente para un análisis general. Hagamos algunas operaciones para ponerlos en una forma más adecuada. Básicamente buscaremos cambiar del formato extendido, bueno para visualizar, a uno apilado, más apropiado para el análisis estadístico\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npollos_peso <- pollos_peso %>%\n                 rename(jerarquia = `Jerarquía\\npor picoteo`) %>% \n                 pivot_longer(cols = `Gallinero 1`:`Gallinero 7`, \n                              names_to = \"gallinero\",\n                              values_to = \"peso\") %>% \n                 mutate(gallinero = factor(gallinero),\n                        jerarquia = as.integer(jerarquia)) %>% \n                 arrange(gallinero)\n```\n:::\n\n\n\n| \n\nAprovecharé la nueva disposición para demostrar el uso de la biblioteca `DT` que define la fuuunción `datatable` y un montón de otros recursos para dar formato tabular y anotar los datos de interés.\n\n| \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DT)\n\npollos_peso |> \n  datatable(colnames = c(\"Posición\", \"id-Gallinero\", \"Peso\")) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-e357cec8c5055c2fcaad\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e357cec8c5055c2fcaad\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\"],[1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4],[\"Gallinero 1\",\"Gallinero 1\",\"Gallinero 1\",\"Gallinero 1\",\"Gallinero 2\",\"Gallinero 2\",\"Gallinero 2\",\"Gallinero 2\",\"Gallinero 3\",\"Gallinero 3\",\"Gallinero 3\",\"Gallinero 3\",\"Gallinero 4\",\"Gallinero 4\",\"Gallinero 4\",\"Gallinero 4\",\"Gallinero 5\",\"Gallinero 5\",\"Gallinero 5\",\"Gallinero 5\",\"Gallinero 6\",\"Gallinero 6\",\"Gallinero 6\",\"Gallinero 6\",\"Gallinero 7\",\"Gallinero 7\",\"Gallinero 7\",\"Gallinero 7\"],[1880,1920,1600,1830,1300,1700,1500,1880,1600,1830,1520,1820,1380,1520,1520,1380,1800,1780,1360,2000,1000,1740,1520,2000,1680,1460,1760,1800]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Posición<\\/th>\\n      <th>id-Gallinero<\\/th>\\n      <th>Peso<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,3]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"jerarquia\",\"targets\":1},{\"name\":\"gallinero\",\"targets\":2},{\"name\":\"peso\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n| \n| \n\nOtra cosa que puedo hacer ahora es construir un gráfico con los datos utilizando la bibliotea `ggplot2`, muy capáz de producir gráficos atractivos, incluso como para publicaciones formales. Piensa en qué gráficos te gustaría inlcuir en el blog que estas construyendo. En este enlace encontrara una [galería de gráficos](https://r-graph-gallery.com/) que pueden ayudar a estimular tu imaginación e interés.\n\n| \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(pollos_peso, aes(x = jerarquia, y = peso)) +\n  geom_point(color = \"darkgreen\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n| \n\n¿qué análisis sugieres habría que hacer ahora? ¿Cómo lo presentarías para asegurar que tu proceso analítico sea reproducible?\n\n| \n\n## Un bonito mapa\n\n¿Piensas que hacer mapas impactantes es cosa de una élite entrenada en GIS? Quizás la belleza de muchos mapas que encontramos por ahí justifica pensar así. Pero ahora podemos aspirar a incluir hermosos mapas en nuestros documentos, pues el acceso a *recursos abiertos* muy competentes de mapeo ha camiado mucho. En *R* tenemos ahora bibliotecas como `sf`, `raster`, `terra`, `leaflet`, `ggplot2` y `tmap`, además del software especializado **QGIS**,\n\nCon `leaflet` puedes incluir mapas interactivos es bastante sencillo. Veamos como empezar con esta biblioteca con unas breves instrucciones.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaflet) # cargar la biblioteca requerida.\n\nbasemap <- leaflet() %>%\n  # ubicación de la zona de interés y nivel de zoom inicial\n  setView(lng = -96.91841, lat = 19.515157, zoom = 20) %>% \n\n    # Añade proveedor de mapa\n  addProviderTiles(\n    \"OpenStreetMap\",\n    # Dale un nombre a la capa\n    group = \"Mapa-OpenStreet\"\n  )\n\n# despliega el mapa\nbasemap \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-76b1aa59feda41d5f586\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-76b1aa59feda41d5f586\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"setView\":[[19.515157,-96.91840999999999],20,[]],\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",null,\"Mapa-OpenStreet\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false}]}]},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n| \n\nAgregar capas, marcadores, etc. Tampoco es muy complicado. Veamos un ejemplo.\n\n|  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nicon.fa <- makeAwesomeIcon(icon = \"bicycle\", markerColor = \"green\",\n                           library = \"fa\",\n                           iconColor = \"red\")\n\n\nmap_1 <- basemap %>% \n  addProviderTiles(\"Esri.WorldImagery\", \n                   group = \"ESRI\") %>% \n  addWMSTiles(\n    \"http://gaia.inegi.org.mx/NLB/tunnel/wms/wms61?\",\n    layers = \"Ortofotos\",\n    options = WMSTileOptions(format = \"image/png\", transparent = TRUE),\n    attribution = \"Inegi\",\n    group = \"Inegi-ortofoto\") %>% \n  addWMSTiles(\n    \"http://gaia.inegi.org.mx/NLB/tunnel/wms/wms61?\",\n    layers = \"c407\",\n    options = WMSTileOptions(format = \"image/png\", transparent = TRUE),\n    attribution = \"Inegi\",\n    group = \"Humedad del suelo\") %>% \n  addAwesomeMarkers(\n    lat = 19.5152,\n    lng = -96.91841,\n    label = \"Starting point\",\n    icon = icon.fa\n  ) %>% \n\n  # Layers control\n  addLayersControl(\n    baseGroups = c(\n      \"Mapa-OpenStreet\",\n      \"ESRI\",\n      \"Inegi-ortofoto\",\n      \"Humedad del suelo\"\n    ),\n    options = layersControlOptions(collapsed = FALSE)\n  )\n\nmap_1\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-133e56022d588928407d\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-133e56022d588928407d\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"setView\":[[19.515157,-96.91840999999999],20,[]],\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",null,\"Mapa-OpenStreet\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",null,\"ESRI\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false}]},{\"method\":\"addWMSTiles\",\"args\":[\"http://gaia.inegi.org.mx/NLB/tunnel/wms/wms61?\",null,\"Inegi-ortofoto\",{\"styles\":\"\",\"format\":\"image/png\",\"transparent\":true,\"version\":\"1.1.1\",\"attribution\":\"Inegi\",\"layers\":\"Ortofotos\"}]},{\"method\":\"addWMSTiles\",\"args\":[\"http://gaia.inegi.org.mx/NLB/tunnel/wms/wms61?\",null,\"Humedad del suelo\",{\"styles\":\"\",\"format\":\"image/png\",\"transparent\":true,\"version\":\"1.1.1\",\"attribution\":\"Inegi\",\"layers\":\"c407\"}]},{\"method\":\"addAwesomeMarkers\",\"args\":[19.5152,-96.91840999999999,{\"icon\":\"bicycle\",\"markerColor\":\"green\",\"iconColor\":\"red\",\"spin\":false,\"squareMarker\":false,\"iconRotate\":0,\"font\":\"monospace\",\"prefix\":\"fa\"},null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},null,null,null,null,\"Starting point\",{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addLayersControl\",\"args\":[[\"Mapa-OpenStreet\",\"ESRI\",\"Inegi-ortofoto\",\"Humedad del suelo\"],[],{\"collapsed\":false,\"autoZIndex\":true,\"position\":\"topright\"}]}],\"limits\":{\"lat\":[19.5152,19.5152],\"lng\":[-96.91840999999999,-96.91840999999999]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nOtra posibilidad para producir documentos con mapas más bien de tipo impreso es la biblioteca `tmap` podemos hacer cosas como las siguiente. Usaremos los datos contenidos en el paquete `spData` para ejemplificar. Aquí está un [tutorial sobre esta biblioteca.](https://rpubs.com/yianlin/901579)\n\n| \n| \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap, spData, dplyr)\n\ndata(\"urban_agglomerations\")\n\nurb_1970_2030 <-  urban_agglomerations %>% \n  filter(year %in% c(1970, 1990, 2010, 2030))\n\ndata(\"World\")\n\ntm_shape(world) +\n  tm_polygons(fill = \"lightblue\") +\n  tm_crs(\"auto\") +\n  tm_shape(urb_1970_2030, ) +\n  tm_symbols(fill = \"black\", \n             col = \"white\", \n             size = \"population_millions\", \n             size.legend = tm_legend(title = \"Población (millones)\")) +\n  tm_facets_wrap(by = \"year\", nrow = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n| \n\nA pesar de lo dicho arriba, con esta biblioteca también se puede incursionar en preparar productos geográficos dinámicos, como sería una animación.\n\n| \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurb_anim <- tm_shape(world) + \n  tm_polygons() + \n  tm_crs(\"auto\") +\n  tm_shape(urban_agglomerations) + \n  tm_symbols(size = \"population_millions\", fill = \"green\") +\n  tm_facets_wrap(by = \"year\", nrow = 1, ncol = 1, free.coords = FALSE) \n\nanim <- urb_anim %>%     \n  tmap_animation(filename = \"img/urb_anim.gif\", delay = 45, verbose = false);\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCreating frames\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCreating animation\nAnimation saved to C:\\Users\\equih\\0 Versiones\\ciencia-reproducible\\2025\\posts\\2025-02-28-contenido\\img\\urb_anim.gif \n```\n\n\n:::\n\n```{.r .cell-code}\nknitr::include_graphics(\"img/urb_anim.gif\")\n```\n\n::: {.cell-output-display}\n![](img/urb_anim.gif)\n:::\n:::\n\n\n\n| \n\n## Incluir videos\n\nSi por cualquier razón encuentras justificado o importante mostrar algo que está en forma de video, fácilmente puedes agregarlo a tu blog. Tan simple como poner algo semejante a esto directamente en el texto. Es decir no se requiere un *trozo de código* ( *code chunk*).\n\n\n\n[$\\{\\{<$ video https://youtu.be/wo9vZccmqwc start=\"10\"    $>\\}\\}$]{style=\"color:green;\"}\n\n|  \n|  \n\n\n\n\n{{< video https://youtu.be/wo9vZccmqwc start=\"10\" >}}\n\n",
    "supporting": [
      "index_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/tabwid-1.1.3/tabwid.js\"></script>\n<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n<script src=\"../../site_libs/leaflet-providers-2.0.0/leaflet-providers_2.0.0.js\"></script>\n<script src=\"../../site_libs/leaflet-providers-plugin-2.2.2/leaflet-providers-plugin.js\"></script>\n<link href=\"../../site_libs/leaflet-awesomemarkers-2.0.3/leaflet.awesome-markers.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-awesomemarkers-2.0.3/leaflet.awesome-markers.min.js\"></script>\n<link href=\"../../site_libs/fontawesome-4.7.0/font-awesome.min.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "8c11e2d8970f68db03b14c6ba6fb7a5e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Vensim\"\nformat: live-html\n\nengine: knitr\n---\n\n::: {.cell}\n\n:::\n\n```{=html}\n<!DOCTYPE html><head><meta charset = \"utf-8\">\n<title>teacup</title>\n\n<style type = \"text/css\">\n* {\n  box-sizing: border-box;\n}\ndiv.sketch {\n  position: relative;\n}\n.io-slider-box {\nbackground-color: white; border: 1px solid gray; font-size:15px;\ntext-align: center; vertical-align: middle; line-height: 17px;\n}\n.io-slider-slide {\n  padding: 0; margin: 0; -webkit-appearance: none; background: transparent;\n}\n.io-slider-slide::-ms-track {\n  background: transparent; border-color: transparent; color: transparent;\n}\n.io-slider-slide::-webkit-slider-thumb {\n  -webkit-appearance: none; width: 18px; height: 18px;\n  border-radius: 20%; background: blue; cursor: pointer;\n}\n.io-slider-slide::-moz-range-thumb {\n  height: 18px; width: 18px;\n    border-radius: 20%; background: blue; cursor: pointer;\n}\n.io-slider-slide::-ms-thumb {\n  height: 18px; width: 18px;\n  border-radius: 20%; background: blue; cursor: pointer;\n}\ndiv.io-chart {\n  background: white;\n  border: 1px solid gray;\n}\ndiv.io-chart > .svg {\n  width: 100%;\n  height: 100%;\n}\ndiv.topBar * {\n  display: inline-block;\n}\nh1, h3 {\n  margin: 0 9px;\n}\nbutton.resetAll {\n  padding: 12px 24px;\n  text-align: center;\n  font-size: 16px;\n  margin: 12px;\n}\nbutton.exportCSV {\n  padding: 12px 24px;\n  text-align: center;\n  font-size: 16px;\n  margin: 12px;\n}\n</style>\n\n\n<script type=\"text/javascript\">\nwindow.onload = function() {\n    window.addEventListener(\"beforeunload\", function (e) {\n        \n        var confirmationMessage = 'If you close or reload this page, your changes will be lost.';\n\n        //e.returnValue = confirmationMessage; //Gecko + IE\n        //window.event.returnValue = confirmationMessage; //Gecko + IE\n        //return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\n        e.preventDefault();\n        e.returnValue = confirmationMessage;\n    });\n};\n</script>\n\n<script type=\"text/javascript\" src=\"web/mdl.js\"></script>\n<script type=\"text/javascript\" src=\"web/vensim_wasm.js\"></script>\n<script type=\"text/javascript\" src=\"web/wasm-arrays.min.js\"></script>\n<script type=\"text/javascript\" src=\"web/d3.min.js\"></script>\n</head><body>\n<h1>teacup</h1>\n\n<div class=\"topBar\">\n<h3>powered by <a target=\"blank\" href=\"https://vensim.com/\">Vensim</a></h3>\n<button class=\"resetAll\">Reset All Sliders</button>\n<button class=\"exportCSV\">Export CSV</button>\n</div>\n\n<div class=\"sketch\">\n<img src=\"web/sketch.png\"></img>\n<div class='io-slider-box' name='Room Temperature' style='position: absolute; top: 246px; left: 257px; width: 163px; height: 18px'>\n70\n</div>\n<input class='io-slider-slide' style='position: absolute; top: 264px; left: 257px; width: 163px' type='range' name='Room Temperature' min='-100' max='200' step='1'></input>\n<div class='io-slider-box' name='Characteristic Time' style='position: absolute; top: 27px; left: 153px; width: 164px; height: 18px'>\n10\n</div>\n<input class='io-slider-slide' style='position: absolute; top: 45px; left: 153px; width: 164px' type='range' name='Characteristic Time' min='-10' max='20' step='0.1'></input>\n<div class='io-slider-box' name='Room Temperature' style='position: absolute; top: 343px; left: 3px; width: 204px; height: 18px'>\n70\n</div>\n<input class='io-slider-slide' style='position: absolute; top: 361px; left: 3px; width: 204px' type='range' name='Room Temperature' min='0' max='100' step='1'></input>\n<div class='io-chart' name='Cambio en la tmperatura' varname='Teacup Temperature' xaxisname='' yaxisname='Degrees' include0 style='position: absolute; top: 35px; left: 510px; width: 537px; height: 337px'></div>\n</div>\n\n<script type=\"text/javascript\">\n\nvar VensimLoadedFlag = 0;\n\nfunction OnVensimLoaded()\n\t{\n\t\tVensimLoadedFlag = _IsVensimLoaded();\n\t\trunModel(0);\n\t}\n\n\nvar VensimCharts = [];\n\nfunction UpdateCharts(run)\n\t{\n            var margin = {left: 70, right: 30, top: 30, bottom: 50};\n\t\t\td3.selectAll(\"div.io-chart\").each(function() {\n\t\t\t\tvar div = d3.select(this);\n\t\t\t\tvar width = parseInt(div.style(\"width\"), 10);\n\t\t\t\tvar height = parseInt(div.style(\"height\"), 10);\n\t\t\t\tvar temp = [\"0\", \"0\", width, height];\n\t\t\t\tdiv.selectAll(\"svg\").data([0]).join(\"svg\").attr(\"viewBox\", temp.join(\",\"));\n\t\t\t\tvar chart = div.select(\"svg\");\n\t\t\t\tvar fTimeVals = GetSeries(\"Time\");\n                                var varname = div.attr(\"varname\");\n\t\t\t\tvar fVals = GetSeries(varname);\n\t\t\t\tif (!VensimCharts[varname]) {\n\t\t\t\t\tVensimCharts[varname] = { runs: [] };\n\t\t\t\t}\n\t\t\t\tvar o = VensimCharts[varname];\n\t\t\t\to.runs[run] = {\n\t\t\t\t\ttimes: fTimeVals,\n\t\t\t\t\tvals: fVals,\n\t\t\t\t}\n\n\t\t\t\tvar vmin = Number.MAX_VALUE;\n\t\t\t\tvar vmax = -Number.MAX_VALUE;\n\t\t\t\tfor (r in o.runs) {\n\t\t\t\t\tvmin = Math.min(vmin, d3.min(o.runs[r].vals));\n\t\t\t\t\tvmax = Math.max(vmax, d3.max(o.runs[r].vals));\n\t\t\t\t}\n\t\t\t\tif ( this.hasAttribute(\"include0\") ) { // force the range to include zero\n\t\t\t\t\tif (vmin > 0) vmin = 0;\n\t\t\t\t\telse if (vmax < 0) vmax = 0;\n\t\t\t\t}\n\t\t\t\tif ( this.hasAttribute(\"ymin\") ) {\n\t\t\t\t\tvmin = this.getAttribute(\"ymin\");\n\t\t\t\t}\n\t\t\t\tif ( this.hasAttribute(\"ymax\") ) {\n\t\t\t\t\tvmax = this.getAttribute(\"ymax\");\n\t\t\t\t}\n\t\t\t\tif ( vmin == vmax ) { // if the range is degenerate, modify\n\t\t\t\t\tif ( vmin == 0 ) {\n\t\t\t\t\t\tvmin = 0;\n\t\t\t\t\t\tvmax = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvmin = vmax/2;\n\t\t\t\t\t\tvmax = vmax*2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n                chart.selectAll(\"text.title\")\n                  .data([0])\n                  .join(\"text\").attr(\"class\", \"title\")\n                  .attr(\"x\", (width - margin.left - margin.right)/2 + margin.left)\n                  .attr(\"y\", (margin.top / 2))\n                  .attr(\"text-anchor\", \"middle\")\n                  .style(\"font-size\", \"16px\")\n                  .text(div.attr(\"name\"));\n\t\t\t\t  \n                var xscale = d3.scaleLinear()\n                    .domain([d3.min(fTimeVals), d3.max(fTimeVals)])\n                    .range([margin.left, width - margin.right]);\n                chart.selectAll(\"g.xaxis\")\n                  .data([0])\n                  .join(\"g\").attr(\"class\", \"xaxis\")\n                  .attr(\"transform\", \"translate(0, \" + (height - margin.bottom) + \")\")\n                  .call(d3.axisBottom(xscale).ticks(width / 80).tickSizeOuter(0));\n                chart.selectAll(\"text.xunits\")\n                  .data([0])\n                  .join(\"text\").attr(\"class\", \"xunits\")\n                  .attr(\"x\", (width - margin.left - margin.right)/2 + margin.left)\n                  .attr(\"y\", height - 14)\n                  .attr(\"text-anchor\", \"middle\")\n                  .style(\"font-size\", \"16px\")\n                  .text(div.attr(\"xaxisname\"));\n\t\t\t\t  \n                var yscale = d3.scaleLinear()\n                    .domain([vmin, vmax])\n                    .range([margin.top, height - margin.bottom]);\n                var yscale_inv = d3.scaleLinear()\n                    .domain([vmin, vmax])\n                    .range([height - margin.bottom, margin.top]);\n                chart.selectAll(\"g.yaxis\")\n                  .data([0])\n                  .join(\"g\").attr(\"class\", \"yaxis\")\n                  .attr(\"transform\", \"translate(\" + margin.left + \", 0)\")\n                  .call(d3.axisLeft(yscale_inv));\n                chart.selectAll(\"text.yunits\")\n                  .data([0])\n                  .join(\"text\").attr(\"class\", \"yunits\")\n                  .attr(\"transform\", \"rotate(-90)\")\n                  .attr(\"y\", 16)\n                  .attr(\"x\", -(height - margin.top - margin.bottom)/2 - margin.top)\n                  .attr(\"text-anchor\", \"middle\")\n                  .style(\"font-size\", \"16px\")\n                  .text(div.attr(\"yaxisname\"));\n\t\t\t\t  \n                for (r in o.runs) {\n                    var color = \"red\";\n                    if (r == 0) { color = \"blue\"; }\n                    chart.selectAll(\"path.data\" + r)\n                      .data([o.runs[r].vals])\n                      .join(\"path\").attr(\"class\", \"data\" + r).attr(\"d\", (d, i) =>\n                        d3.line()\n                          .x((d, i) => xscale(o.runs[r].times[i]))\n                          .y((d) => height - margin.bottom - yscale(d) + margin.top)(d))\n                      .attr(\"stroke\", color)\n                      .attr(\"fill\", \"none\");\n                }\n            });\n}\n\n// reset slider values to the value attribute in the io-slider-slide\nfunction resetAllSliders() {\n\td3.selectAll(\"input.io-slider-slide\").nodes().forEach(function(i){\n\t\ti.value = i.getAttribute(\"value\");\n\t\td3.selectAll(\"div.io-slider-box[name='\" + i.name + \"']\").text(i.valueAsNumber);\n\t});\n}\n\n// reset slider values to the value in the WASM code\nfunction updateAllSliders() {\n\td3.selectAll(\"input.io-slider-slide\").nodes().forEach(function(i){\n\t\ti.value = GetConstant(i.name);\n\t\td3.selectAll(\"div.io-slider-box[name='\" + i.name + \"']\").text(i.valueAsNumber);\n\t});\n}\n\n// set slider values to the value in the WASM code and modify the DOM io-slider values to make that permanent\n// if the value attribute is already defined, skip\n// this permits the user to add value=\"37.5\" to an io-slider-slider to override the WASM default\nfunction initializeSliders() {\n\td3.selectAll(\"input.io-slider-slide\").nodes().forEach(function(i){\n\t\tvar v;\n\t\tif ( i.hasAttribute(\"value\")) {\n\t\t\tv = i.getAttribute(\"value\");\n\t\t}\n\t\telse {\n\t\t\tv = GetConstant(i.name);\n\t\t\ti.setAttribute( \"value\", v);\n\t\t}\n\t\t// ensure that the property and text match the attribute\n\t\ti.value = v;\n\t\td3.selectAll(\"div.io-slider-box[name='\" + i.name + \"']\").text(i.valueAsNumber);\n\t});\n}\n\nfirstRun = true;\n\nfunction runModel(run) {\nif (  VensimLoadedFlag == 0)\n{\n\treturn;\n}\n//if ( VensimLoadingFilesCount > 0)\n//{\n//\treturn;\n//}\n\nInitializeModel();\nif (firstRun) {\n\tinitializeSliders();\n\tfirstRun = false;\n}\n\n// set all slider constants\nd3.selectAll(\"input.io-slider-slide\").each(function() {\n\t//console.log(\"Setting \" + this.name + \" to \" + this.valueAsNumber);\n\tSetConstant(this.name, this.valueAsNumber);\n});\nRunSim();\nUpdateCharts(run);\n}\n\nd3.select(\"button.resetAll\").nodes()[0].onclick = function() {\nresetAllSliders();\nrunModel(1);\n}\n\nd3.select(\"button.exportCSV\").nodes()[0].onclick = function() {\nExportCSV();\n}\n\nd3.selectAll(\"input.io-slider-slide\").nodes().forEach(function(i){\ni.oninput = function() {\n// update the number shown for all sliders of this var\nd3.selectAll(\"div.io-slider-box[name='\" + i.name + \"']\").text(i.valueAsNumber);\nd3.selectAll(\"input.io-slider-slide[name='\" + i.name + \"']\").each(function() { this.value = i.valueAsNumber; })\nrunModel(1);\n};\n});\n\n</script>\n\n</body></html>\n\n\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
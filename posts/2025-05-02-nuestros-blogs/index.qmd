---
title: "Nuestros Blogs"
author: 
  - name: "Adrian Canova Herrandiz"
  - name: "Andrés De la Rosa Portilla"
  - name: "Denisse Alejandra Diaz Romo"
  - name: "Guadalupe Méndez Dewar"
  - name: "Juan José Hernández Viveros"
  - name: "Mordecai"
  - name: "Nohemy Cardona Claros"
  - name: "Ulises Zarate"
  - name: "Vicky Delgadillo"
  - name: "Victoria Carolina"

image: "img/Image by Gerd Altmann from Pixabay - tree-200795_1280.jpg"
lang: es
date: 02/may/2025

categories: [comunidad, participantes, ejemplos, galería]

code-fold: true
code-summary: "muestra el escript:"
fig-cap-location: top

bibliography: "../references.bib"
csl: ../apa.csl

format: 
  html:
    toc: true
---


## Blogs de participantes

Haremos una página con una galería de muestra de los blogs que estamos construyendo. Por favor [comparte tus datos](https://miequiz.shinyapps.io/listaBlogs/ ) para poderlo hacer. Actualmente tenemos estos **Blogs** registrados.


```{r}
#| label: recupera-datos

pacman::p_load(imager, magick, surveydown, flextable, dplyr, stringr, glue, rvest)


db <- sd_db_connect(env_file = ".env", 
                    ignore = FALSE,
                    gssencmode = "prefer")

data <- sd_get_data(db = db)


data <- data |> 
  mutate(blog = str_extract(url_blog, 
                  "(?<=//)(.*)(?=\\.netlify\\.app)"),
         git = str_extract(url_git, 
                  "(?<=https://github.com/)(.*)"),
         url_git = if_else(!is.na(data$url_git), 
                           paste0(data$url_git, "/issues"), NA),
         git = str_replace(git, "\\w*/", ""),
         git = str_replace(git, "/issues", ""))


  
figs <- list()
for (blog in data$url_blog)
{
  pag <- tryCatch(
    {
      pag <- read_html(blog)
    },
    error = function(e)
    {
      pag <- NA
#      cat("Ocurrió un error:", e$message, "\n")
      return(pag)
    }
  )
  if (!is.na(pag))
  {
    img <- pag |> 
    html_elements("img") |> 
    html_attr('src') |> 
    as_tibble() |> 
    slice(if_else(str_detect(blog,  "limon"), 2, 1)) |> 
    str_remove("\\./") |> 
    paste0(blog, "/",. = _) |> 
    str_replace_all(" ", "%20") |> 
    str_replace_all("\\\\", "/") |> 
    str_replace("(\\w)(//)(\\w)", "\\1/\\3") |> 
    image_read() |> 
    image_scale("100x100>")
    
    titulo <- paste0("img/", str_extract(blog, "(?<=//)(.*?)(?=\\.net)"), ".png")
    image_write(img, titulo)
    
    figs <- append(figs, titulo)
  } else 
  {
    img <- image_read("img/blog-caido.png") |> 
      image_scale("100x100>")

    titulo <- paste0("img/", str_extract(blog, "(?<=//)(.*?)(?=\\.net)"), ".png")
    
    image_write(img, titulo)
    
    figs <- append(figs, titulo)
  }
}


data |> 
  mutate(fig = unlist(figs)) |> 
  filter(nombre != "") |>     
  arrange(nombre) |> 
  select(fig, nombre, git, url_git, blog, url_blog) |> 
  flextable() |> 
  set_header_labels(nombre = "Autor", git = "Github", 
                    blog = "Blog", fig = "Portada") |> 
  mk_par(j = "fig", 
          value = as_paragraph(as_image(src = fig))) |> 
  mk_par(j = "git", 
          value = as_paragraph(hyperlink_text(x = git, url = url_git))) |> 
  mk_par(j = "blog", 
          value = as_paragraph(hyperlink_text(x = blog, url = url_blog))) |>
  delete_columns(j = c(4, 6)) |> 
  flextable::width(j=2:4, width = c(3, 4, 3))

```



::: {.callout-warning collapse="true"}
## Inconsistencias en el registro

### Registros repetidos

```{r}
#| label: repetidos
#| tbl-cap: Registros repetidos
#| attr-output: "style='font-size: 1.0em'"

repet <- data |>
  filter(!is.na(nombre)) |> 
  group_by(nombre) |>
  filter(n() > 1) |>
  ungroup() |> 
  select(nombre:url_blog)

if (length(repet$nombre) > 0)
{
  repet |> 
    flextable() |> 
    set_header_labels(nombre = "Nombre", correo = "e-mail", 
                      url_git = "GitHub", url_blog = "Blog")
} else {
    cat("No hay registros repetidos\n")
}

```

### Registros sin datos

```{r}  
#| label: vacios
#| attr-output: "style='font-size: 1.0em'"

vacios <- data |>
  filter(is.na(nombre)) |> 
  select(nombre:url_blog) |> 
  summarise(vacios = n())

if (vacios == 1)
{  cat(glue("Hay {vacios} registro vacío.  "))
} else {
  cat(glue("Hay {vacios} registros vacíos.  "))
}
```

### URL equivocadas

```{r}
#| label: url-mal

data <- sd_get_data(db = db)

url_err <- data |>
  filter(str_detect(url_git, "netlify") | str_detect(url_blog, "github") ) |> 
  select(nombre:url_blog)

if (length(url_err) == 0)
{
  url_err |> 
    flextable(col_keys = c("nombre", "url_git", "url_blog")) |> 
    set_header_labels(nombre = "Nombre", 
                      url_git = "GitHub", 
                      url_blog = "Blog")
} else {
    cat("No se detectaron fallas en el registro de URL")
}

```
:::

\ 
\ 

### Opiniones

Sigue una encuesta hecha en _Google forma_, que estoy vinculando aquí como un recurso **iframe**. Lo que hice fue crear el formato en _Google forms_ de la manera usual y obtener allá el código mediante la opción **Incorporar HTML** que encontré en _opciones_ (los puntitos arriba a la izquierda en el sitio). Lo  siguiente es poner esas líneas en un bloque de código _html_ así:
\ 

::: {style="font-weight: bold; background-color: WhiteSmoke;"}
```html
<iframe 
  src="https://docs.google.com/forms/d/e/1FAIpQLSfwhhNegX8-R6jfCSnvZwUfabBNIUIb4fqxESnZKHYrDTnj-g/viewform?embedded=true" 
  width="800" 
  height="1600" 
  frameborder="0" 
  marginheight="0" 
  marginwidth="0">
  Cargando…
</iframe>
```
:::

\ 

```{=html}
<iframe 
  src="https://docs.google.com/forms/d/e/1FAIpQLSfwhhNegX8-R6jfCSnvZwUfabBNIUIb4fqxESnZKHYrDTnj-g/viewform?embedded=true" 
  width="800" 
  height="1600" 
  frameborder="0" 
  marginheight="0" 
  marginwidth="0">
  Cargando…
</iframe>
```



## Comentarios



```{r}

pacman::p_load(googlesheets4, stringr, dplyr, 
               tidyr, ggplot2, flextable, DT)

# keyring::key_get(service = "google-sheets", "equihuam")

options(gargle_oauth_email = "equihuam@gmail.com", 
        gargle_oob_default = TRUE,
        gargle_oauth_client_type = "web")

gs4_auth()

url_gs <- "https://docs.google.com/spreadsheets/d/1bHAFCwoJToh8VVbfsmqx2GNaBvEiq7RYA4Pt1ljVtD4/edit?resourcekey=&gid=834459562#gid=834459562"
datos_id <- str_extract(url_gs, "(?<=/d/)(.*?)(?=/edit)")

datos_blogs <- read_sheet(datos_id) 

etiqueta <- "Datos de la encuesta"

```



```{r}

datos_blogs |> 
  select(`Blog que revisaste`, Comentarios) |> 
  arrange(`Blog que revisaste`) |> 
  datatable(colnames = c("Blog", "Comentarios"),
            rownames = FALSE,
            options = list(
              autoWidth = TRUE,
              columnDefs = list(
                  list(targets = 0,       # Primera columna (blog)
                       width = '150px'    # ancho de 200 pixels
                       ),
                  list(targets = 1,       # Columna 2 comentarios
                       width = '4 00px'))))

```

  

[
  {
    "objectID": "posts/bienvenida/index.html",
    "href": "posts/bienvenida/index.html",
    "title": "Blog de Reproducibilidad Científica",
    "section": "",
    "text": "Este es un espacio para conversar sobre Ciencia Reproducible. La figura ilustra los pilares de la reproducibilidad de acuerdo con lo expresado en este artículo de González-Rayas, et al., 2020"
  },
  {
    "objectID": "posts/2025-02-21-inicio/index.html",
    "href": "posts/2025-02-21-inicio/index.html",
    "title": "Los primeros pasos",
    "section": "",
    "text": "Tan simple como escribir en la página en blanco con pequeñas marcas de intención. Se ha inventado varias veces y el columpio ha ido y venido entre el interés en ver y controlar las marcas directamente sobre el texto y la preferencia de ver sólo el producto terminado WYSIWYG (lo que ves es lo que tienes, aunque el marcado existe, pero lo hace la máquina por ti).\n\n\n\n\n\n\n\n\n\nFigura 1: Libro de Irene Vallejo\n\n\n\n\n\n\n\n\nEl trabajo del científico, el ingeniero, el estudiante o el creador de contenidos transita por el proceso de escribir, almacenar y dar formato presentable a los documentos. La escritura da origen a la historia y deja atras la prehistoria. Un largo proceso de evolución cultural apasionante que tiene un hermoso recuento en el libro de Irene Vallejo El infinito en un Junco (Fig. 1). Hemos explorado las rocas, la arcilla, los pigmentos vegetales y minerales, las pieles de animales y los tejidos vegetales para escribir. Hoy lo hacemos sobre el éter y nos apoyamos en procesos electromagnéticos.\n\n\n\nHacer esto ha involucrado a incontables inventores y lo hacemos recurriendo a herramientas y formatos que tienen registro de propiedad a nombre de lucrativas empresas particulares. Lo hacemos así y el hecho no nos merece ni un suspiro reflexivo sobre sus implicaciones.\nA veces nos incomodan detalles o grandes fallas que obstaculizan la expresividad que requiere la escritura académica creativa. En general, la práctica actual se opone a lograr un flujo ágil y transparente a lo largo del proceso completo que involucra organizar los datos, analizarlos, sintetizarlos y publicar los hallazgos obtenidos.\nPor la fuerza del hábito, y a pesar de inconvenientes, la mayoría de las revistas aún insisten en recibir textos en formato docx.\nEn el movimiento social que nos invita a reflexionar sobre la ciencia abierta, hay quienes sostenemos que el conocimiento y el proceso creativo que lo impulsa debe ser lo más libre posible. El talento y la sabiduría su núcleo. Sobre todo en áreas como la salud y la calidad del entorno ecológico en el que vivimos.\n\n\n\n\n\n\nMarkdown fue desarrollado en 2004 por John Gruber (Fig. 2). Ideo una manera de poner marcas de formato en un texto cómun y corriente (lo llamaremos texto plano). También construyó un programa de cómputo (lo escribió en el lenguaje Perl), para convertir los archivos ya marcados en Markdown a algo conveniente para que las computadoras nos los pudieran presentar a través de la Web. Hacer esto implica recontruir y transforrmar el documento original a un nuevo formato, el HTML (HyperText Markup Language). Encontrarás ayuda sobre como usar Markdown en el menú de ayuda de RStudio: Help \\(\\rightarrow\\) Markdown Quick Reference.\n\n\n \n\n\n\n\n\nFigura 2: John Gruber\n\n\n\n\n\n\n\n\n\nHe aquí uno de los grande valores que busca el movimiento en favor de una ciencia abierta: romper las barreras que limitan el acceso a los textos y a los datos. El uso de texto plano para escribir y organizar archivos de datos tienen muchas ventajas. Para empezar se pueden leer prácticamente en cualquier dispositivo, independientemente de sistema operativo e intereses comerciales de los fabricantes. Los archivos escritos así han superado la dura prueba del paso del tiempo mejor que otros tipos de archivos.\nEl día de hoy empezaremos a utilizar la idea del Markdown. Producirás tus primeros archivos que serán legibles como texto plano y que a la vez estarán listos para ser producidos en una variedad de presentaciones que usualmente requerimos para nuestro propio registro de actividades y para interactuar con colegas o maestros. Además, de lo que hizo en su momento Gruber, ahora existen herramientas como Pandoc, que pueden convertir archivos desde Markdown a una variedad de otros formatos que seguramente serán de tu interés en algún momento. Otro de los valores de la ciencia abierta: favorecer el reuso de los productos de información y conocimiento"
  },
  {
    "objectID": "posts/2025-02-21-inicio/index.html#markdown-y-la-ciencia-abierta",
    "href": "posts/2025-02-21-inicio/index.html#markdown-y-la-ciencia-abierta",
    "title": "Los primeros pasos",
    "section": "",
    "text": "Tan simple como escribir en la página en blanco con pequeñas marcas de intención. Se ha inventado varias veces y el columpio ha ido y venido entre el interés en ver y controlar las marcas directamente sobre el texto y la preferencia de ver sólo el producto terminado WYSIWYG (lo que ves es lo que tienes, aunque el marcado existe, pero lo hace la máquina por ti).\n\n\n\n\n\n\n\n\n\nFigura 1: Libro de Irene Vallejo\n\n\n\n\n\n\n\n\nEl trabajo del científico, el ingeniero, el estudiante o el creador de contenidos transita por el proceso de escribir, almacenar y dar formato presentable a los documentos. La escritura da origen a la historia y deja atras la prehistoria. Un largo proceso de evolución cultural apasionante que tiene un hermoso recuento en el libro de Irene Vallejo El infinito en un Junco (Fig. 1). Hemos explorado las rocas, la arcilla, los pigmentos vegetales y minerales, las pieles de animales y los tejidos vegetales para escribir. Hoy lo hacemos sobre el éter y nos apoyamos en procesos electromagnéticos.\n\n\n\nHacer esto ha involucrado a incontables inventores y lo hacemos recurriendo a herramientas y formatos que tienen registro de propiedad a nombre de lucrativas empresas particulares. Lo hacemos así y el hecho no nos merece ni un suspiro reflexivo sobre sus implicaciones.\nA veces nos incomodan detalles o grandes fallas que obstaculizan la expresividad que requiere la escritura académica creativa. En general, la práctica actual se opone a lograr un flujo ágil y transparente a lo largo del proceso completo que involucra organizar los datos, analizarlos, sintetizarlos y publicar los hallazgos obtenidos.\nPor la fuerza del hábito, y a pesar de inconvenientes, la mayoría de las revistas aún insisten en recibir textos en formato docx.\nEn el movimiento social que nos invita a reflexionar sobre la ciencia abierta, hay quienes sostenemos que el conocimiento y el proceso creativo que lo impulsa debe ser lo más libre posible. El talento y la sabiduría su núcleo. Sobre todo en áreas como la salud y la calidad del entorno ecológico en el que vivimos.\n\n\n\n\n\n\nMarkdown fue desarrollado en 2004 por John Gruber (Fig. 2). Ideo una manera de poner marcas de formato en un texto cómun y corriente (lo llamaremos texto plano). También construyó un programa de cómputo (lo escribió en el lenguaje Perl), para convertir los archivos ya marcados en Markdown a algo conveniente para que las computadoras nos los pudieran presentar a través de la Web. Hacer esto implica recontruir y transforrmar el documento original a un nuevo formato, el HTML (HyperText Markup Language). Encontrarás ayuda sobre como usar Markdown en el menú de ayuda de RStudio: Help \\(\\rightarrow\\) Markdown Quick Reference.\n\n\n \n\n\n\n\n\nFigura 2: John Gruber\n\n\n\n\n\n\n\n\n\nHe aquí uno de los grande valores que busca el movimiento en favor de una ciencia abierta: romper las barreras que limitan el acceso a los textos y a los datos. El uso de texto plano para escribir y organizar archivos de datos tienen muchas ventajas. Para empezar se pueden leer prácticamente en cualquier dispositivo, independientemente de sistema operativo e intereses comerciales de los fabricantes. Los archivos escritos así han superado la dura prueba del paso del tiempo mejor que otros tipos de archivos.\nEl día de hoy empezaremos a utilizar la idea del Markdown. Producirás tus primeros archivos que serán legibles como texto plano y que a la vez estarán listos para ser producidos en una variedad de presentaciones que usualmente requerimos para nuestro propio registro de actividades y para interactuar con colegas o maestros. Además, de lo que hizo en su momento Gruber, ahora existen herramientas como Pandoc, que pueden convertir archivos desde Markdown a una variedad de otros formatos que seguramente serán de tu interés en algún momento. Otro de los valores de la ciencia abierta: favorecer el reuso de los productos de información y conocimiento"
  },
  {
    "objectID": "posts/2025-02-21-inicio/index.html#quarto",
    "href": "posts/2025-02-21-inicio/index.html#quarto",
    "title": "Los primeros pasos",
    "section": "Quarto",
    "text": "Quarto\nLo que haremos es:\n\nArrancar RStudio\nCrear un nuevo proyecto\n!!!Empezar a escribir!!!\n\n\n\n\n\n\n\nNuevo proyecto\n\n\n\n\n\nRstudio tiene en su menu file la opción de preparar documentos en Quarto."
  },
  {
    "objectID": "posts/2025-02-21-inicio/index.html#guardar-con-la-intención-de-colaborar",
    "href": "posts/2025-02-21-inicio/index.html#guardar-con-la-intención-de-colaborar",
    "title": "Los primeros pasos",
    "section": "Guardar con la intención de colaborar",
    "text": "Guardar con la intención de colaborar\nAhora ya tenemos el texto en nuestras máquinas, almacenado en casa. ¿Podemos hacer algo más para asegurar esos materiales y facilitar compartirlos con quienes queramos? Te sugiero considerar git y github para eso. Podemos imaginar que el espacio de almacenamiento en tu máquina es como una parcela de siembra, cada dato tiene coordenadas de localización y así los recuperas cuando los quieres. Lo que hace git es agregar una ventana de tiempo que te permite asomarte a la historia de lo que pasó en esas ubicaciones que te interesan.\n\n\nFuente: Final.doc en Piled Higher and Deeper por Jorge Cham, http://www.phdcomics.com\n\n\n\n\n¿Qué es Git?\nEs una aplicación diseñada por el iniciador del desarrollo de Linux Linus Torvalds. Git es un sistema eficiente confiable y distribuido de control de versiones. El control de versiones es simplemente el seguimiento y registro de los cambios que va teniendo un documento a lo largo del tiempo. El concepto distribuido se refiere a que el registro local que tengas en tu máquina o para el caso en cualquier número de máquinas, es un registro completo, clonado del proyecto. Estos repositorios locales plenamente funcionales permiten trabajar aún cuando no tengas acceso a Internet. Los autores realizan y registran su trabajo localmente y, cuando lo encuentren conveniente, sincronizan la copia local del repositorio con la del servidor. En la actualidad Git se ha convertido en el estándar mundial de facto para el control de versiones.\n\n\n\n\n\n\nActivar git\n\n\n\n\n\nPara activar git en tu proyecto tienes dos opciones:\n\nHacerlo desde el principio marcando la casilla respectiva al momento de crear el proyecto.\nUtilizar la biblioteca de herramientas auxiliares usethis.\n\nCon este comando creas lo necesario para usar git en tu proyecto.\n\n\nmuestra el escript:\nusethis::use_git()\n\n\nEn cualquier caso, ahora conviene verificar como está configurado el espacio de trabajo. En la ventana de consola puedes escribir los siguientes comandos para averiguar detalles de tu configuración.\nEsto te dirá como se llama la ventana de tiempo que has elegido definir como base de trabajo, puedes tener tantas ramas distintas como consideres, pero conviene que una sea la principal. Se solía llamar a esta rama master, pero ahora se ha considerado que la !esclavitud ya ha sido abolida!, así que hay una tendencia a mejor llamarle main. En realidad puedes llamarla como quieras.\n\n\nmuestra el escript:\nusethis::git_default_branch()\n\n\nSi quieres configurar tu instalación de RStudio para que siempre defina la rama base como main, puedes usar elsiguiente comando. Aunque esto sólo actuará para futuros proyectos, no cambiará nada en los que tienes ya creados hasta este momento.\n\n\nmuestra el escript:\nusethis::git_default_branch_configure(name = \"main\")\n\n\nSi lo que quieres es modificar la rama principal del proyecto con el que estas trabajando y que ya tienes abierto, este es el comando que te ayudará. En este ejemplo uso lo que es ya práctica común, migrar de master a main, pero puedes tomar tus propias preferencias sin ningún problema, aunque obviamente la parte from debe ser la existente que deseas modificar.\n\n\nmuestra el escript:\nusethis::git_default_branch_rename(from = \"master\", to = \"main\")\n\n\nNo todos los archivos que están en el espacio de trabajo son realmente de interés como para seguir su historia en el tiempo y podría haber también cosas que nunca deberían estar registradas en un sistema que te expone al acceso público generalizado: claves personales, tokens, identificadores de archivos privados, etc. Aunque ante esto no hay mejor cosa que ser prudente y estar atentos, existe la función vacunar que busca ayudarte a evitar estos problemas. Para activar esta ayuda en tu proyecto puedes usar este comando.\n\n\nmuestra el escript:\nusethis::git_vaccinate()\n\n\nEsto pone ya en operación las capacidades de git en tu máquina. Para usarlas debes dirigirte a la pestaña respectiva. Con la función Commit generas el registro del estado de los archivos del proyecto al momento de activar el comando. Para operar esto debes decidir que archivos enviar al registro histórico, marcados como staged. Al apretar el botón Commit aparecerá una ventana en donde se reportan los detalles de lo que estas registrando. Cada Commit requiere anotar un mensaje descriptivo breve de lo que contiene el “corte”. Una vez que está todo resuelto, hay que apretar el botón Commit en esa pantalla y esperar algunos segundos a que termine el proceso de registro en la base de datos respectiva.\n\n\n\n\n\n\n\n\n\nEnviar el repositorio git a la nube\n\n\n\n\n\nAhora estas preparada o preparado para enviar tu trabajo a la nube, lo haremos con el servicio de Github, aunque hay varias opciones (como gitlab por ejemplo).\nNuevamente nos ayudará usethispara hacer esto. Lo primero es que para comunicar RStudio con Github necesitas registrar un token de ese servicio en tu equipo. El comando para esto es:\n\n\nmuestra el escript:\nusethis::create_github_token()\n\n\nEsto te lleva a la página de Github en la que hay que generar el token. Hay que responder las preguntas que te haga la página, aunque todo estará prellenado con lo normalmente necesario. Cuando esté a tu gusto, aprieta el botón respectivo. Aparecerá una nueva pantalla con el token que habrá que copiar al portapapeles (ctr-c en Windows). Este token que aparece, es la única vez que lo verás, por lo que conviene copiarlo al portapapeles de tu máquina (ctrl-c en windows) y tenerlo a buen resguardo por lo pronto. En seguida hay que ejecutar este otro comando en la consola de RStudio\n\n\nmuestra el escript:\ngitcreds::gitcreds_set()\n\n\nSi es la primeta vez que registras un token te pedirá que lo registres, dale paste (ctrl-v en Windows). Si ya tienes un registro dado de alta, te informará sobre lo que tiene anotado y te dará oportunidad de decidir qué quieres hacer en seguida.\nTodo está ya preparado, sólo falta poner en uso el vínculo que acabamos de crear. Para eso bastará con decir:\n\n\nmuestra el escript:\nusethis::use_github()\n\n\nPor cierto, este es el comando qe necesitarán en lo sucesivo para vincular cualquier nuevo proyecto a tt centta ed Github, siempre y cuando tu token este vigente.\n\n\n\n\n\n\n\n\n\nUna vez teminadas estas tarea puedes ir a la pestaña git cuando lo consideres conveniente y ordenar a RStudio que envié todos los commits que están pendientes hasta el momento a Github. Para hacerlo deberás apretar el botón Push. Antes de hacerlo siempre es conveniente pedirle a git que se ponga al día con lo que ya está registrado en la nube, esto lo logras con el botón pull. Esto nos lleva a una rutina de operación con git que se resume en la figura siguiente.\n\n\n\n\n\n\n\n\n\n\n\n\nResumen rutinario para usar git\n\n\n\n\n\nClaro está que configurar todo la primera vez es un poco complicado, pero si todo está listo: git instalado, cuenta de Github, token activado, etc. la operación cotidiana es mucho más sencilla.\nEn la figura se ilustran las dos rutas para hacerlo en RStudio.\n\nEvidentemete, si seguiste la ruta azul, tu repositorio ya existe en Github, una vez qe hayas clonado el repositorio en t máquina todo queda listo para concentrarte en escriibir. Si optaste por la ruta verde, entonces deberás crear un nuevo repositorio en Github. Para hacerlo Utiliza usethis en la pestaña de consola.\n\n\nmuestra el escript:\nusethis::use_github()\n\n\nEso es todo.\n\n\n\n\n\n\n\n\n\n\n\nPublicar tu Blog con ayuda de Netlify\n\n\n\n\n\nHay que indicarle a Github que de acceso a Netlify para que tome continuamente lo necesario. La meta es que construya un sitio Web con tu contenido y lo publique en Internet. Los pasos que hay que seguir para esta primera interacción son los siguiente.\nIniciar la vinculación con Github seleccionando la opción que ofrece importar los documentos desde un repo Git. Esto dará la opción de utilizar Github como origen de datos, entre otras posibilidades.\n\nEl Siguiente paso es autorizar a Netlify a acceder a Github a través de tu cuenta, así como los específicos del repositorio que te interesa vincular. Esto también implica instalar una aplicación de vínculo entre Netlify y Github dentro de tu cuenta.\n\nSi todo ocurrió sin problemas, tendrás ahora en Github, en el menú de aplicaciones (Avatar→ Settings→ Applications), un botón que te permitirá configurar el vínculo con Netlify según tus requerimientos. También podrás ver los repos que hayas autorizado desde Netlify.\n\nCreación de un nuevo sitio a publicar\n\nEn Netlify:\n\nDesde la opción team o site puedes generar un nuevo sitio.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCuando aprietas el boton de añadir sitio, aparecerá una nueva pantalla que tiene tres secciones. Se trata de los atributos que tendrás que proporcionar para darle presencia en Internet a tu proyecto y algunos otros atributos que definen como se producirá y actualizará continuamente. Estas operaciones es poco probable que las vuelvas a ver, una vez que tu proyecto esté en producción, aunque desde luego estarán siempre ahí por si deseas hacer ajustes.\n\n¿Qué nombre le daras?\nDeberás elegir un nombre que se convertirá en una URL para acceder a tu proyecto. Puede ser cualquier cosa que desees, pero debe ser único. En esta sección puedes escribir nombres y verificar que estén disponibles\n\n\n\n¿Qué hará Netlify para operar tu sitio?\nEs una colección de atributos para indicarle a Netlify dónde conseguir los documentos y como manejarlos. En nuestro caso, muy simple, básicamente hay que decirle en donde están los documentos que Quarto, con ayuda de pandoc, ha renderizado. Si no has cambiado nada en _quarto.yml la rama que estamos usando aquí para que Git los registre es main y, en ella el directorio de producción se llama **_site**. Por favor verifica el contenido de esto para ayudarte a comprender mejor lo que estás haciendo.\n\n\n\n¿Todo listo? ¡a producción!\nEn nuestro caso no hay más que hacer, Netlify tiene información suficiente para encargarse de publicar tu proyecto continuamente. Incorporará los cambios que hagas en RStudio en la rama principal. Lo hará automáticamente cada vez que envíes tus cambios a Github.\n\nSi todo salió bien, en este momento ya debe estar tu proyecto publicado y accesible para cualquier lector del mundo que lo localice y se interese en su contenido.\n\n\n\n\n\n\n\n\n\n\n\nFinalmente ¿Cómo quedá todo organizado?\n\n\n\n\n\n\nTienes un proyecto en tu máquina\nEstá vinculado con tu cuenta en Github\nEstán vinculados Github y Netlify\n\nAhora, sólo queda crear el contenido del Blog. Recuerda usar un directorio para cada nueva contribución dentro de la carpeta posts. Te sugiero usar un esquema fecha-tema para llamar esos archivos. Evita usar espacios y caracteres latinos en esos temas. Para trabajar hay que crear un archivo index.qmd. Puedes hacerlo desde el menu: File $ $ New Quarto document…\nConfigura el encabezaddo de control con algo así como:\n---\ntitle: \"Descriptivo del contenido\"\nauthor: \"Tu Nombre y el de los autores involucrados\"\nlang: es\ndate: {{la fecha de publicación}}\ncategories: [colección de frases clave separadas por comas]\nimage: \"archivo de la imágen que deseas incluir como portada\"\ncode-fold: true\ncode-summary: \"muestra el escript:\"\nfig-cap-location: top\n---\nSi es de tu interés, aquí encontrarás muchos detalles interesanes sobre YAML"
  },
  {
    "objectID": "posts/2025-02-21-inicio/index.html#enviar-el-repositorio-git-a-la-nube",
    "href": "posts/2025-02-21-inicio/index.html#enviar-el-repositorio-git-a-la-nube",
    "title": "Los primeros pasos",
    "section": "Enviar el repositorio git a la nube",
    "text": "Enviar el repositorio git a la nube\nAhora estas preparada o preparado para enviar tu trabajo a la nube, lo haremos con el servicio de Github, aunque hay varias opciones (como gitlab por ejemplo).\nNuevamente nos ayudará usethispara hacer esto. Lo primero es que para comunicar RStudio con Github necesitas registrar un token de ese servicio en tu equipo. El comando para esto es:\n\n\nmuestra el escript:\nusethis::create_github_token()\n\n\nEsto te lleva a la página de Github en la que hay que generar el token. Hay que responder las preguntas que te haga la página, aunque todo estará prellenado con lo normalmente necesario. Cuando esté a tu gusto, aprieta el botón respectivo. Aparecerá una nueva pantalla con el token que habrá que copiar al portapapeles (ctr-c en Windows). Este token que aparece, es la única vez que lo verás, por lo que conviene copiarlo al portapapeles de tu máquina (ctrl-c en windows) y tenerlo a buen resguardo por lo pronto. En seguida hay que ejecutar este otro comando en la consola de RStudio\n\n\nmuestra el escript:\ngitcreds::gitcreds_set()\n\n\nSi es la primeta vez que registras un token te pedirá que lo registres, dale paste (ctrl-v en Windows). Si ya tienes un registro dado de alta, te informará sobre lo que tiene anotado y te dará oportunidad de decidir qué quieres hacer en seguida.\nTodo está ya preparado, sólo falta poner en uso el vínculo que acabamos de crear. Para eso bastará con decir:\n\n\nmuestra el escript:\nusethis::use_github()\n\n\nPor cierto, este es el comando qe necesitarán en lo sucesivo para vincular cualquier nuevo proyecto a tt centta ed Github, siempre y cuando tu token este vigente.\n\n\n\n\n\n\nUna vez teminadas estas tarea puedes ir a la pestaña git cuando lo consideres conveniente y ordenar a RStudio que envié todos los commits que están pendientes hasta el momento a Github. Para hacerlo deberás apretar el botón Push. Antes de hacerlo siempre es conveniente pedirle a git que se ponga al día con lo que ya está registrado en la nube, esto lo logras con el botón pull. Esto nos lleva a una rutina de operación con git que se resume en la figura siguiente.\n\n\n\n\n\n\n\nResumen rutinario para usar git\nClaro está que configurar todo la primera vez es un poco complicado, pero si todo está listo: git instalado, cuenta de Github, token activado, etc. la operación cotidiana es mucho más sencilla.\nEn la figura se ilustran las dos rutas para hacerlo en RStudio.\n\nEvidentemete, si seguiste la ruta azul, tu repositorio ya existe en Github, una vez qe hayas clonado el repositorio en t máquina todo queda listo para concentrarte en escriibir. Si optaste por la ruta verde, entonces deberás crear un nuevo repositorio en Github. Para hacerlo Utiliza usethis en la pestaña de consola.\n\n\nmuestra el escript:\nusethis::use_github()\n\n\nEso es todo."
  },
  {
    "objectID": "posts/2025-02-21-inicio/index.html#asociar-github-con-netlify-para-publicar-tu-blog",
    "href": "posts/2025-02-21-inicio/index.html#asociar-github-con-netlify-para-publicar-tu-blog",
    "title": "Los primeros pasos",
    "section": "Asociar Github con Netlify para publicar tu Blog",
    "text": "Asociar Github con Netlify para publicar tu Blog\nHay que preparar a Github dando acceso a Netlify para que tome lo necesario. La meta es que construya un sitio Web con tu contenido y lo publique en Internet. Los pasos que hay que seguir para esta primera interacción son los siguiente.\nIniciar la vinculación con Github seleccionando la opción que ofrece importar los documentos desde un repo Git. Esto dará la opción de utilizar Github como origen de datos, entre otras posibilidades.\n\nEl Siguiente paso es autorizar a Netlify a acceder a Github a través de tu cuenta, así como los específicos del repositorio que te interesa vincular. Esto también implica instalar una aplicación de vínculo entre Netlify y Github dentro de tu cuenta.\n\nSi todo ocurrió sin problemas, tendrás ahora en Github, en el menú de aplicaciones (Avatar→ Settings→ Applications), un botón que te permitirá configurar el vínculo con Netlify según tus requerimientos. También podrás ver los repos que hayas autorizado desde Netlify."
  },
  {
    "objectID": "posts/2025-02-21-inicio/index.html#creación-de-un-nuevo-sitio-a-publicar",
    "href": "posts/2025-02-21-inicio/index.html#creación-de-un-nuevo-sitio-a-publicar",
    "title": "Los primeros pasos",
    "section": "Creación de un nuevo sitio a publicar",
    "text": "Creación de un nuevo sitio a publicar\n\nEn Netlify:\n\nDesde la opción team o site puedes generar un nuevo sitio.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCuando aprietas el boton de añadir sitio, aparecerá una nueva pantalla que tiene tres secciones. Se trata de los atributos que tendrás que proporcionar para darle presencia en Internet a tu proyecto y algunos otros atributos que definen como se producirá y actualizará continuamente. Estas operaciones es poco probable que las vuelvas a ver, una vez que tu proyecto esté en producción, aunque desde luego estarán siempre ahí por si deseas hacer ajustes.\n\n¿Qué nombre le daras?\nDeberás elegir un nombre que se convertirá en una URL para acceder a tu proyecto. Puede ser cualquier cosa que desees, pero debe ser único. En esta sección puedes escribir nombres y verificar que estén disponibles\n\n\n\n¿Qué hará Netlify para operar tu sitio?\nEs una colección de atributos para indicarle a Netlify dónde conseguir los documentos y como manejarlos. En nuestro caso, muy simple, básicamente hay que decirle en donde están los documentos que Quarto, con ayuda de pandoc, ha renderizado. Si no has cambiado nada en _quarto.yml la rama que estamos usando aquí para que Git los registre es main y, en ella el directorio de producción se llama **_site**. Por favor verifica el contenido de esto para ayudarte a comprender mejor lo que estás haciendo.\n\n\n\n¿Todo listo? ¡a producción!\nEn nuestro caso no hay más que hacer, Netlify tiene información suficiente para encargarse de publicar tu proyecto continuamente. Incorporará los cambios que hagas en RStudio en la rama principal. Lo hará automáticamente cada vez que envíes tus cambios a Github.\n\nSi todo salió bien, en este momento ya debe estar tu proyecto publicado y accesible para cualquier lector del mundo que lo localice y se interese en su contenido."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Por una Ciencia Reproducible 2025",
    "section": "",
    "text": "¿Qúe puedo incluir en mis documentos?\n\n\n\n\n\n\nmapas\n\n\ntablas\n\n\ngráficas\n\n\ngalería\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 28 de febrero, 2025\n\n\nMiguel Equihua\n\n\n\n\n\n\n\n\n\n\n\n\n¿Qúe puedo incluir en mis documentos?\n\n\n\n\n\n\nmapas\n\n\ntablas\n\n\ngráficas\n\n\ngalería\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 28 de febrero, 2025\n\n\nMiguel Equihua\n\n\n\n\n\n\n\n\n\n\n\n\nLos primeros pasos\n\n\n\n\n\n\ntaller\n\n\ninicio\n\n\nmarkdown\n\n\nrstudio\n\n\ngit\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 21 de febrero, 2025\n\n\nMiguel Equihua\n\n\n\n\n\n\n\n\n\n\n\n\nCiencia Abierta:\n\n\nRetos y Perspectivas\n\n\n\nantecedentes\n\n\npresentación\n\n\nconceptos\n\n\npropuestas\n\n\n\nLa ciencia abierta surge como un movimiento que nos invita a reconsiderar como se desarrolla la actividad científica, como se accede a sus resultado e incluso como se pueden gestionar oportunidades para que el público general se pueddda involucra en sus procesos y apropiarrse de sus beneficios con mayor facilidad y confianza. \n\n\n\n\n\nXalapa, Ver., 21 de febrero, 2025\n\n\nMiguel Equihua, Griselda Benítez, Octavio Pérez Maqueo\n\n\n\n\n\n\n\n\n\n\n\n\nUna Nueva Manera de Escribir\n\n\n\n\n\n\ntaller\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 14 de febrero, 2025\n\n\nMiguel Equihua\n\n\n\n\n\n\n\n\n\n\n\n\nBlog de Reproducibilidad Científica\n\n\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 14 de febrero, 2025\n\n\nMiguel Equihua\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Acerca de",
    "section": "",
    "text": "Este es un blog de reflexión sobre actitudes que conviene cultivar y formas sobre como se puede escribir para propiciar una ciencia más reproducible."
  },
  {
    "objectID": "images/pacto-contribuyente.html",
    "href": "images/pacto-contribuyente.html",
    "title": "Pacto del contribuyente",
    "section": "",
    "text": "En el interés de fomentar una comunidad abierta y acogedora, nosotros como participantes y facilitadores nos comprometemos a hacer de la participación en nuestro taller y nuestra comunidad una experiencia libre de acoso para todos, independientemente de la edad, dimensión corporal, discapacidad, etnia, identidad y expresión de género, nivel de experiencia, nacionalidad, apariencia física, raza, religión, identidad u orientación sexual.\n\n\n\nEjemplos de comportamiento que contribuyen a crear un ambiente positivo:\n\nUso de lenguaje amable e inclusivo\nRespeto a diferentes puntos de vista y experiencias\nAceptación de críticas constructivas\nEnfocarse en lo que es mejor para la comunidad\nMostrar empatía a otros miembros de la comunidad\n\nEjemplos de comportamiento inaceptable por participantes:\n\nUso de lenguaje o imágenes sexuales y atención sexual no deseada\nComentarios insultantes o despectivos (trolling) y ataques personales o políticos\nAcoso público o privado\nPublicación de información privada de terceros sin su consentimiento, como direcciones físicas o electrónicas\nOtros tipos de conducta que pudieran considerarse inapropiadas en un entorno profesional.\n\n\n\n\nLos facilitadores del taller son responsables de clarificar los estándares de comportamiento aceptable y se espera que tomen medidas correctivas y apropiadas en respuesta a situaciones de conducta inaceptable.\nLos facilitadores del taller tienen el derecho y la responsabilidad de eliminar en los productos para la Web que se elaboren, editar o rechazar comentarios, commits, código, ediciones de documentación, issues, y otras contribuciones que no estén alineadas con este Código de Conducta, o de prohibir temporal o permanentemente a cualquier participante cuyo comportamiento sea inapropiado, amenazante, ofensivo o perjudicial.\n\n\n\nEste código de conducta aplica tanto a espacios del taller como a espacios públicos donde un individuo presente intereses del taller o comunidad UV. Ejemplos de esto incluye el uso de correo electrónico a nombre del grupo, publicaciones a través de las redes sociales, o presentaciones en eventos online u offline. La representación del taller puede ser clarificada explicitamente por los facilitadores del proyecto.\n\n\n\nEjemplos de abuso, acoso u otro tipo de comportamiento inaceptable puede ser reportado al conductor del taller en M. Equihua. Todas las quejas serán revisadas e investigadas, generando un resultado apropiado a las circunstancias. El equipo del proyecto está obligado a mantener confidencialidad de la persona que reportó el incidente. Detalles específicos acerca de las políticas de aplicación pueden ser publicadas por separado.\nFacilitadores que no sigan o que no hagan cumplir este Código de Conducta pueden ser eliminados de forma temporal o permanente del equipo.\n\n\n\nEste Código de Conducta es una adaptación del Contributor Covenant, versión 1.4, disponible en https://www.contributor-covenant.org/es/version/1/4/code-of-conduct.html"
  },
  {
    "objectID": "images/pacto-contribuyente.html#código-de-conducta-convenido",
    "href": "images/pacto-contribuyente.html#código-de-conducta-convenido",
    "title": "Pacto del contribuyente",
    "section": "",
    "text": "En el interés de fomentar una comunidad abierta y acogedora, nosotros como participantes y facilitadores nos comprometemos a hacer de la participación en nuestro taller y nuestra comunidad una experiencia libre de acoso para todos, independientemente de la edad, dimensión corporal, discapacidad, etnia, identidad y expresión de género, nivel de experiencia, nacionalidad, apariencia física, raza, religión, identidad u orientación sexual.\n\n\n\nEjemplos de comportamiento que contribuyen a crear un ambiente positivo:\n\nUso de lenguaje amable e inclusivo\nRespeto a diferentes puntos de vista y experiencias\nAceptación de críticas constructivas\nEnfocarse en lo que es mejor para la comunidad\nMostrar empatía a otros miembros de la comunidad\n\nEjemplos de comportamiento inaceptable por participantes:\n\nUso de lenguaje o imágenes sexuales y atención sexual no deseada\nComentarios insultantes o despectivos (trolling) y ataques personales o políticos\nAcoso público o privado\nPublicación de información privada de terceros sin su consentimiento, como direcciones físicas o electrónicas\nOtros tipos de conducta que pudieran considerarse inapropiadas en un entorno profesional.\n\n\n\n\nLos facilitadores del taller son responsables de clarificar los estándares de comportamiento aceptable y se espera que tomen medidas correctivas y apropiadas en respuesta a situaciones de conducta inaceptable.\nLos facilitadores del taller tienen el derecho y la responsabilidad de eliminar en los productos para la Web que se elaboren, editar o rechazar comentarios, commits, código, ediciones de documentación, issues, y otras contribuciones que no estén alineadas con este Código de Conducta, o de prohibir temporal o permanentemente a cualquier participante cuyo comportamiento sea inapropiado, amenazante, ofensivo o perjudicial.\n\n\n\nEste código de conducta aplica tanto a espacios del taller como a espacios públicos donde un individuo presente intereses del taller o comunidad UV. Ejemplos de esto incluye el uso de correo electrónico a nombre del grupo, publicaciones a través de las redes sociales, o presentaciones en eventos online u offline. La representación del taller puede ser clarificada explicitamente por los facilitadores del proyecto.\n\n\n\nEjemplos de abuso, acoso u otro tipo de comportamiento inaceptable puede ser reportado al conductor del taller en M. Equihua. Todas las quejas serán revisadas e investigadas, generando un resultado apropiado a las circunstancias. El equipo del proyecto está obligado a mantener confidencialidad de la persona que reportó el incidente. Detalles específicos acerca de las políticas de aplicación pueden ser publicadas por separado.\nFacilitadores que no sigan o que no hagan cumplir este Código de Conducta pueden ser eliminados de forma temporal o permanente del equipo.\n\n\n\nEste Código de Conducta es una adaptación del Contributor Covenant, versión 1.4, disponible en https://www.contributor-covenant.org/es/version/1/4/code-of-conduct.html"
  },
  {
    "objectID": "posts/2025-02-14-taller/index.html",
    "href": "posts/2025-02-14-taller/index.html",
    "title": "Una Nueva Manera de Escribir",
    "section": "",
    "text": "Curso-taller para iniciarse en las habilidades que promueve la ciencia abierta. La apertura invita a ampliar la colaboración, pero también la eficacia con la que se colabora Hay mucho que ya se puede hacer con el apoyo de Dropbox®, GoogleDocs® y con las mismas aplicaciones de Microsoft® ¿Qué significa que esto esté ocurriendo? ¿Qué implicaciones podría tener sobre la forma como se hace y comunica la ciencia?\nEl curso-taller se propone acercar al estudiante a la increíble evolución mundial de las capacidades de cómputo y de comunicación que ya está en marcha. No sólo porque cada vez hay mayores facilidades para colaborar, sino por la capacidad actual para producir documentos que combinan el texto con el procesamiento estadístico de datos y las gráficas resultantes. El que la secuencia completa datos→análisis→texto se pueda unificar, da todo un nuevo significado al proceso de comunicación en favor de la reproducibilidad científica.\nLos estudiantes aprenderán a producir reportes académicos en distintos formatos: páginas web, documentos tipo Word®, PDF, carteles, presentaciones e incluso artículos o libros. Todo esto sin que se requiera un conocimiento previo de R o RStudio. Lo haremos paso a paso y con un enfoque de manos a la obra. El estudiante podrá elegir los materiales, datos y textos que le interese ensayar.\nLas actividades se desarrollarán a lo largo de 4 semanas teórico prácticas. Habrá sesiones presenciales de 3 horas los viernesde 10 am a 1pm. Se espera que el estudiante desarrollará actividades a su paso para desarrollar el producto que será la entrega final al término del taller. La carga de trabajo se estima requerirá 9 horas adicionales cada semana."
  },
  {
    "objectID": "posts/2025-02-14-taller/index.html#temario",
    "href": "posts/2025-02-14-taller/index.html#temario",
    "title": "Una Nueva Manera de Escribir",
    "section": "Temario",
    "text": "Temario\nEl curso-taller introducirá al estudiante a los siguientes temas:\n\nTematica 1\n\n¿Ciencia abierta y reproducibilidad?\nEl proceso científico abierto y su trazabilidad\nEscribir en RStudio recurriendo a:\n\nmarkdown\nQuarto\npandoc\necuaciones Latex\n\n\nTematica 2\n\nLeer datos desde distintos orígenes: Excel®, Google Sheets®, OneCloud®\nColaboración y control de versiones\nPublicación en línea.\n\nTematica 3 - Un Blog como libreta colaborativa de trabajo - Organización del contenido - Producción de Diapositivas para presentaciones Web - Documentos abiertos a comentarios desde la web"
  },
  {
    "objectID": "posts/2025-02-14-taller/index.html#actividades-presenciales",
    "href": "posts/2025-02-14-taller/index.html#actividades-presenciales",
    "title": "Una Nueva Manera de Escribir",
    "section": "Actividades presenciales",
    "text": "Actividades presenciales\nLas sesiones presenciales se llevarán a cabo en el Aula 16, aunque los detalles de la calendarización todavía habrá de ser acordada."
  },
  {
    "objectID": "posts/2025-02-14-taller/index.html#requisitos-previos",
    "href": "posts/2025-02-14-taller/index.html#requisitos-previos",
    "title": "Una Nueva Manera de Escribir",
    "section": "Requisitos previos",
    "text": "Requisitos previos\nEl estudiante tiene familiaridad con el uso de computadoras y el uso de Internet. Para algunas de las actividades será provechoso tener cuentas activas en los servicios en línea Github (como sistema de control de versiones) y Netlify (para publicar blogs y sitios web personales). El estudiante tendrá que generar su cuenta personal en cada uno de estos servicios. Se recomienda hacerlo con antelación.\n\nAlta en Github.\nAlta en Netlify.\nAlta en hypothesis\n\nPara las actividades en clase se espera que tendrá ya instalado en su máquina el sistema de control de versiones Git (windows requiere instalarlo. Linux y macOS normalmente ya tienen git instalado. Además, para quienes prefieren el mundo gráfico de windows y desean evitar el uso de terminales y comandos, se sugiere utilizar Github Desktop o TortoiseGit). También habrá que tener listo el interprete del lenguaje de computo R y la interface de desarrollo RStudio. Las instrucciones para estos dós últimos están aquí, en el caso de ambiente MS-Windows® pueden usarse los siguientes enlaces:\n\ngit for windows\nInstalar Github Desktop\nInstalar R\nInstalar RStudio\n\nPara las actividdades de preparación es importante verrificar que las siguientes bibliotecas estén instaladas en R. Para hacerlo puedes usar el menú Tools \\(\\rightarrow\\) Install packages… o el siguiente commando en la pestaña Consola.\n\n\nmuestra el escript:\ninstall.packages(c(\"rmarkdown\", \"usethis\", \"knitter\", \"tinytex\"))\n\n\n\nrmarkdown\nknitr\nusethis\ntinytex\n\nSi interesa verificar la publicación Web de documentos hay que prever que no estén bloqueados en el Firewall de la institución los sitios con terminación .netlify.app, pues es la que utilizará el servicio Netlify por defecto.\nQuarto es un sistema de fuente abierta para la autoría de documentos científicos y técnicos. Puedes aprender más sobre lo que ofrece Quarto en este enlace.\nLa construcción de comunidades de aprendizaje requiere compartir intereses y actitudes. Al respecto pongo a su consideración el Pacto del Contribuyente, que busca exponer ideas y conceptos que hace la convivencia grata y productiva. Pienso que el espíritu de este documento es muy adecuado para estimular la reflexión que buscamos propicie lo que estaremos haciendo en este taller.\n\n\nmuestra el escript:\n# devtools::install_github(\"benjcunningham/googlecalendar\", force=TRUE)\n\nlibrary(qrcode)\n\ncode &lt;- qr_code(\"https://2025-ciencia-reproducible.netlify.app/\")\nplot(code, col = c(\"white\", \"#2268bb\"))\n\n\n\n\nCódigo QR del blog"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#antecedentes---ciencia-y-cooperación",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#antecedentes---ciencia-y-cooperación",
    "title": "Ciencia Abierta:",
    "section": "Antecedentes - ciencia y cooperación",
    "text": "Antecedentes - ciencia y cooperación"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#narrar-y-escribir",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#narrar-y-escribir",
    "title": "Ciencia Abierta:",
    "section": "Narrar y Escribir",
    "text": "Narrar y Escribir\n\nFrente a la oralidad, que favorece las formas e ideas tradicionales, reconocibles para el que escucha, el discurso alfabetizado puede abrirse a horizontes desconocidos porque el lector tiene tiempo para asimilar y meditar con tranquilidad las ideas novedosas. En los libros caben planteamientos excéntricos, voces de identidades individuales, desafíos a la tradición.\n\n\n\n\n\n\n\n \n\n\nIrene Vallejo"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#escribir-y-la-importancia-de-reflexionar",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#escribir-y-la-importancia-de-reflexionar",
    "title": "Ciencia Abierta:",
    "section": "Escribir y la importancia de reflexionar",
    "text": "Escribir y la importancia de reflexionar\nSócrates temía que, por culpa de la escritura se abandonaría el esfuerzo de la propia reflexión. Lo dice mediante la conversación entre Thamus (rey de Egipto) y el dios Theuth:\n\niOh Theuth!, por ser el padre de la escritura le atribuyes ventajas que no tiene. Es olvido lo que producirán las letras en quienes las aprendan, descuidarán la memoria. Fiándose de los libros, llegarán al recuerdo desde fuera. Será, por tanto, apariencia de sabiduría, no autenticidad lo que la escritura dará a los hombres; y, cuando haya hecho de ellos entendidos en todo sin verdadera instrucción, su compañía será difícil de soportar, porque se creerán sabios en lugar de serlo.\n\n\n\n\n\n\n\n \n\n\nIrene Vallejo"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#section-2",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#section-2",
    "title": "Ciencia Abierta:",
    "section": "",
    "text": "https://www.softwareheritage.org/"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#preocupados-doomsday-clock",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#preocupados-doomsday-clock",
    "title": "Ciencia Abierta:",
    "section": "¿Preocupados?: Doomsday clock",
    "text": "¿Preocupados?: Doomsday clock"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#crisis-de-reproducibiliad",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#crisis-de-reproducibiliad",
    "title": "Ciencia Abierta:",
    "section": "Crisis de reproducibiliad",
    "text": "Crisis de reproducibiliad\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFuente: 1,500 scientists lift the lid on reproducibility. Nature (2016)"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#significados-de-ciencia-abierta",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#significados-de-ciencia-abierta",
    "title": "Ciencia Abierta:",
    "section": "Significados de ciencia abierta",
    "text": "Significados de ciencia abierta\n\n\n\n\n\n\n\nPublicación abierta\nDatos abiertos\nPre-registro\nConsentimiento libre, previo e informado\nCiencia ciudadana\nInvestigación acción"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#ciencia-abierta-institucionalizada",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#ciencia-abierta-institucionalizada",
    "title": "Ciencia Abierta:",
    "section": "Ciencia abierta institucionalizada",
    "text": "Ciencia abierta institucionalizada\n\n\n\n\n\n\n\nDerecho humano a la ciencia\nRepositorios nacionales de publicaciones abiertas\nRepositorios nacionales de datos abiertos\nMétricas y reconocimiento a las personas\nAcuerdo de Escazú"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#declaración-de-panamá",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#declaración-de-panamá",
    "title": "Ciencia Abierta:",
    "section": "Declaración de Panamá",
    "text": "Declaración de Panamá\n\n\n\n\n\n\n\nEntiende que el conocimiento es un bien común.\nConfía en el papel de la ciencia como motor de la democracia, la libertad y la justicia social en el momento histórico actual.\nQuiere más ciencia, que debe ser abierta.\nAvanza hacia modelos de colaboración entre Academia-Ciudadanía-Estado-Empresa.\nAfirma que abrir la ciencia exige ir más allá del acceso abierto.\nInsta a que la sociedad recupere el liderazgo.\nAfirma que los ciudadanos tienen derecho a producir y beneficiarse de la ciencia, la tecnología y la innovación.\n\n\n\n \n\n\n\n\n\n\nFuente: Declaración de Panamá"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#section-4",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#section-4",
    "title": "Ciencia Abierta:",
    "section": "",
    "text": "Ciencia abierta y bienestar sustentable\n\n\n\n\n\n\n\nBienestar sustentable\nArticulación de saberes, capacidades y compromisos\nInteligencia artificial interpretable\n\n\n\n\n\n\n\n\n\n\n\n\nFuente: Costanza, R. (2020). Ecological Economics, 168, 106484."
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#la-ciencia-abierta-que-queremos",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#la-ciencia-abierta-que-queremos",
    "title": "Ciencia Abierta:",
    "section": "La ciencia abierta que queremos",
    "text": "La ciencia abierta que queremos\n\n\n\n\n\n\n\nCooperativa\nTrazable\nreproducible\nVerificable con datos\nIncluyente (científicos y no científicos)\nDatos abiertos\nReflexiva\n\n\n\n\n\n\nFuente: Equihua, M. y Pérez-Maqueo, O. (2024).Ciencia abierta desde el Inecol. Eco-lógico"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#cómo-ponerla-en-práctica",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#cómo-ponerla-en-práctica",
    "title": "Ciencia Abierta:",
    "section": "Cómo ponerla en práctica",
    "text": "Cómo ponerla en práctica\n\n\n\n\n\n\n\nCambio cultural profundo\nTransformar viejos hábitos\nAprender nuevas habilidades\nReaprender a cooperar\nCambios institucionales\nAbierta y no monopólica\nDatos abiertos FAIR"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#consecuencias-imprevistas",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#consecuencias-imprevistas",
    "title": "Ciencia Abierta:",
    "section": "¿Consecuencias imprevistas?",
    "text": "¿Consecuencias imprevistas?\n\n\n\n\n\nFuente: https://www.nature.com/articles/d41586-022-00724-0"
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#costos-de-procesamiento-de-artículos-apc",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#costos-de-procesamiento-de-artículos-apc",
    "title": "Ciencia Abierta:",
    "section": "Costos de Procesamiento de Artículos (APC)",
    "text": "Costos de Procesamiento de Artículos (APC)\n\n\n\n\n\n\n\nEl modelo APC demolió parte del muro de pago que bloqueaba el acceso de los lectores a las publicaciones.\nAhora a levantado un nuevo muro de pago en el otro extremo de la cadena, al bloquear el acceso de los autores menos privilegiados a la publicación."
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#lo-no-fair",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#lo-no-fair",
    "title": "Ciencia Abierta:",
    "section": "Lo No-FAIR",
    "text": "Lo No-FAIR\n\n\n\n\n\n\nDebemos ser especialmente sensibles a las formas en que las políticas de Ciencia Abierta pueden en realidad empeorar las desigualdades existentes."
  },
  {
    "objectID": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#section-7",
    "href": "posts/2025-02-21-inicio/pres-ciencia-abierta.html#section-7",
    "title": "Ciencia Abierta:",
    "section": "",
    "text": "i-Gamma"
  },
  {
    "objectID": "posts/2025-02-21-inicio/index.html#finalmente-cómo-quedá-todo-organizado",
    "href": "posts/2025-02-21-inicio/index.html#finalmente-cómo-quedá-todo-organizado",
    "title": "Los primeros pasos",
    "section": "Finalmente ¿Cómo quedá todo organizado?",
    "text": "Finalmente ¿Cómo quedá todo organizado?\n\nTienes un proyecto en tu máquina\nEstá vinculado con tu cuenta en Github\nEstán vinculados Github y Netlify\n\nAhora, sólo queda crear el contenido del Blog. Recuerda usar un directorio para cada nueva contribución dentro de la carpeta posts. Te sugiero usar un esquema fecha-tema para llamar esos archivos. Evita usar espacios y caracteres latinos en esos temas. Para trabajar hay que crear un archivo index.qmd. Puedes hacerlo desde el menu: File $ $ New Quarto document…\nConfigura el encabezaddo de control con algo así como:\n---\ntitle: \"Descriptivo del contenido\"\nauthor: \"Tu Nombre y el de los autores involucrados\"\nlang: es\ndate: {{la fecha de publicación}}\ncategories: [colección de frases clave separadas por comas]\nimage: \"archivo de la imágen que deseas incluir como portada\"\ncode-fold: true\ncode-summary: \"muestra el escript:\"\nfig-cap-location: top\n---\nSi es de tu interés, aquí encontrarás muchos detalles interesanes sobre YAML."
  },
  {
    "objectID": "posts/2025-02-21-inicio/index.html#organizarnos-con-la-intención-de-colaborar",
    "href": "posts/2025-02-21-inicio/index.html#organizarnos-con-la-intención-de-colaborar",
    "title": "Los primeros pasos",
    "section": "Organizarnos con la intención de colaborar",
    "text": "Organizarnos con la intención de colaborar\nAhora ya tenemos el texto en nuestras máquinas, almacenado en casa. ¿Podemos hacer algo más para asegurar esos materiales y facilitar compartirlos con quienes queramos? Te sugiero considerar git y github para eso. Podemos imaginar que el espacio de almacenamiento en tu máquina es como una parcela de siembra, cada dato tiene coordenadas de localización y así los recuperas cuando los quieres. Lo que hace git es agregar una ventana de tiempo que te permite asomarte a la historia de lo que pasó en esas ubicaciones que te interesan.\n\n\nFuente: Final.doc en Piled Higher and Deeper por Jorge Cham, http://www.phdcomics.com\n\n\n\n\n¿Qué es Git?\nEs una aplicación diseñada por el iniciador del desarrollo de Linux Linus Torvalds. Git es un sistema eficiente confiable y distribuido de control de versiones. El control de versiones es simplemente el seguimiento y registro de los cambios que va teniendo un documento a lo largo del tiempo. El concepto distribuido se refiere a que el registro local que tengas en tu máquina o para el caso en cualquier número de máquinas, es un registro completo, clonado del proyecto. Estos repositorios locales plenamente funcionales permiten trabajar aún cuando no tengas acceso a Internet. Los autores realizan y registran su trabajo localmente y, cuando lo encuentren conveniente, sincronizan la copia local del repositorio con la del servidor. En la actualidad Git se ha convertido en el estándar mundial de facto para el control de versiones.\n\n\n\n\n\n\nActivar git\n\n\n\n\n\nPara activar git en tu proyecto tienes dos opciones:\n\nHacerlo desde el principio marcando la casilla respectiva al momento de crear el proyecto.\nUtilizar la biblioteca de herramientas auxiliares usethis.\n\nCon este comando creas lo necesario para usar git en tu proyecto.\n\n\nmuestra el escript:\nusethis::use_git()\n\n\nEn cualquier caso, ahora conviene verificar como está configurado el espacio de trabajo. En la ventana de consola puedes escribir los siguientes comandos para averiguar detalles de tu configuración.\nEsto te dirá como se llama la ventana de tiempo que has elegido definir como base de trabajo, puedes tener tantas ramas distintas como consideres, pero conviene que una sea la principal. Se solía llamar a esta rama master, pero ahora se ha considerado que la !esclavitud ya ha sido abolida!, así que hay una tendencia a mejor llamarle main. En realidad puedes llamarla como quieras.\n\n\nmuestra el escript:\nusethis::git_default_branch()\n\n\nSi quieres configurar tu instalación de RStudio para que siempre defina la rama base como main, puedes usar elsiguiente comando. Aunque esto sólo actuará para futuros proyectos, no cambiará nada en los que tienes ya creados hasta este momento.\n\n\nmuestra el escript:\nusethis::git_default_branch_configure(name = \"main\")\n\n\nSi lo que quieres es modificar la rama principal del proyecto con el que estas trabajando y que ya tienes abierto, este es el comando que te ayudará. En este ejemplo uso lo que es ya práctica común, migrar de master a main, pero puedes tomar tus propias preferencias sin ningún problema, aunque obviamente la parte from debe ser la existente que deseas modificar.\n\n\nmuestra el escript:\nusethis::git_default_branch_rename(from = \"master\", to = \"main\")\n\n\nNo todos los archivos que están en el espacio de trabajo son realmente de interés como para seguir su historia en el tiempo y podría haber también cosas que nunca deberían estar registradas en un sistema que te expone al acceso público generalizado: claves personales, tokens, identificadores de archivos privados, etc. Aunque ante esto no hay mejor cosa que ser prudente y estar atentos, existe la función vacunar que busca ayudarte a evitar estos problemas. Para activar esta ayuda en tu proyecto puedes usar este comando.\n\n\nmuestra el escript:\nusethis::git_vaccinate()\n\n\nEsto pone ya en operación las capacidades de git en tu máquina. Para usarlas debes dirigirte a la pestaña respectiva. Con la función Commit generas el registro del estado de los archivos del proyecto al momento de activar el comando. Para operar esto debes decidir que archivos enviar al registro histórico, marcados como staged. Al apretar el botón Commit aparecerá una ventana en donde se reportan los detalles de lo que estas registrando. Cada Commit requiere anotar un mensaje descriptivo breve de lo que contiene el “corte”. Una vez que está todo resuelto, hay que apretar el botón Commit en esa pantalla y esperar algunos segundos a que termine el proceso de registro en la base de datos respectiva.\n\n\n\n\n\n\n\n\n\nEnviar el repositorio git a la nube\n\n\n\n\n\nAhora estas preparada o preparado para enviar tu trabajo a la nube, lo haremos con el servicio de Github, aunque hay varias opciones (como gitlab por ejemplo).\nNuevamente nos ayudará usethispara hacer esto. Lo primero es que para comunicar RStudio con Github necesitas registrar un token de ese servicio en tu equipo. El comando para esto es:\n\n\nmuestra el escript:\nusethis::create_github_token()\n\n\nEsto te lleva a la página de Github en la que hay que generar el token. Hay que responder las preguntas que te haga la página, aunque todo estará prellenado con lo normalmente necesario. Cuando esté a tu gusto, aprieta el botón respectivo. Aparecerá una nueva pantalla con el token que habrá que copiar al portapapeles (ctr-c en Windows). Este token que aparece, es la única vez que lo verás, por lo que conviene copiarlo al portapapeles de tu máquina (ctrl-c en windows) y tenerlo a buen resguardo por lo pronto. En seguida hay que ejecutar este otro comando en la consola de RStudio\n\n\nmuestra el escript:\ngitcreds::gitcreds_set()\n\n\nSi es la primeta vez que registras un token te pedirá que lo registres, dale paste (ctrl-v en Windows). Si ya tienes un registro dado de alta, te informará sobre lo que tiene anotado y te dará oportunidad de decidir qué quieres hacer en seguida.\nTodo está ya preparado, sólo falta poner en uso el vínculo que acabamos de crear. Para eso bastará con decir:\n\n\nmuestra el escript:\nusethis::use_github()\n\n\nPor cierto, este es el comando qe necesitarán en lo sucesivo para vincular cualquier nuevo proyecto a tt centta ed Github, siempre y cuando tu token este vigente.\n\n\n\n\n\n\n\n\n\nUna vez teminadas estas tarea puedes ir a la pestaña git cuando lo consideres conveniente y ordenar a RStudio que envié todos los commits que están pendientes hasta el momento a Github. Para hacerlo deberás apretar el botón Push. Antes de hacerlo siempre es conveniente pedirle a git que se ponga al día con lo que ya está registrado en la nube, esto lo logras con el botón pull. Esto nos lleva a una rutina de operación con git que se resume en la figura siguiente.\n\n\n\n\n\n\n\n\n\n\n\n\nResumen rutinario para usar git\n\n\n\n\n\nClaro está que configurar todo la primera vez es un poco complicado, pero si todo está listo: git instalado, cuenta de Github, token activado, etc. la operación cotidiana es mucho más sencilla.\nEn la figura se ilustran las dos rutas para hacerlo en RStudio.\n\nEvidentemete, si seguiste la ruta azul, tu repositorio ya existe en Github, una vez qe hayas clonado el repositorio en t máquina todo queda listo para concentrarte en escriibir. Si optaste por la ruta verde, entonces deberás crear un nuevo repositorio en Github. Para hacerlo Utiliza usethis en la pestaña de consola.\n\n\nmuestra el escript:\nusethis::use_github()\n\n\nEso es todo.\n\n\n\n\n\n\n\n\n\n\n\nPublicar tu Blog con ayuda de Netlify\n\n\n\n\n\nHay que indicarle a Github que de acceso a Netlify para que tome continuamente lo necesario. La meta es que construya un sitio Web con tu contenido y lo publique en Internet. Los pasos que hay que seguir para esta primera interacción son los siguiente.\nIniciar la vinculación con Github seleccionando la opción que ofrece importar los documentos desde un repo Git. Esto dará la opción de utilizar Github como origen de datos, entre otras posibilidades.\n\nEl Siguiente paso es autorizar a Netlify a acceder a Github a través de tu cuenta, así como los específicos del repositorio que te interesa vincular. Esto también implica instalar una aplicación de vínculo entre Netlify y Github dentro de tu cuenta.\n\nSi todo ocurrió sin problemas, tendrás ahora en Github, en el menú de aplicaciones (Avatar→ Settings→ Applications), un botón que te permitirá configurar el vínculo con Netlify según tus requerimientos. También podrás ver los repos que hayas autorizado desde Netlify.\n\nCreación de un nuevo sitio a publicar\n\nEn Netlify:\n\nDesde la opción team o site puedes generar un nuevo sitio.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCuando aprietas el boton de añadir sitio, aparecerá una nueva pantalla que tiene tres secciones. Se trata de los atributos que tendrás que proporcionar para darle presencia en Internet a tu proyecto y algunos otros atributos que definen como se producirá y actualizará continuamente. Estas operaciones es poco probable que las vuelvas a ver, una vez que tu proyecto esté en producción, aunque desde luego estarán siempre ahí por si deseas hacer ajustes.\n\n¿Qué nombre le daras?\nDeberás elegir un nombre que se convertirá en una URL para acceder a tu proyecto. Puede ser cualquier cosa que desees, pero debe ser único. En esta sección puedes escribir nombres y verificar que estén disponibles\n\n\n\n¿Qué hará Netlify para operar tu sitio?\nEs una colección de atributos para indicarle a Netlify dónde conseguir los documentos y como manejarlos. En nuestro caso, muy simple, básicamente hay que decirle en donde están los documentos que Quarto, con ayuda de pandoc, ha renderizado. Si no has cambiado nada en _quarto.yml la rama que estamos usando aquí para que Git los registre es main y, en ella el directorio de producción se llama **_site**. Por favor verifica el contenido de esto para ayudarte a comprender mejor lo que estás haciendo.\n\n\n\n¿Todo listo? ¡a producción!\nEn nuestro caso no hay más que hacer, Netlify tiene información suficiente para encargarse de publicar tu proyecto continuamente. Incorporará los cambios que hagas en RStudio en la rama principal. Lo hará automáticamente cada vez que envíes tus cambios a Github.\n\nSi todo salió bien, en este momento ya debe estar tu proyecto publicado y accesible para cualquier lector del mundo que lo localice y se interese en su contenido.\n\n\n\n\n\n\n\n\n\n\n\nFinalmente ¿Cómo quedá todo organizado?\n\n\n\n\n\n\nTienes un proyecto en tu máquina\nEstá vinculado con tu cuenta en Github\nEstán vinculados Github y Netlify\n\nAhora, sólo queda crear el contenido del Blog. Recuerda usar un directorio para cada nueva contribución dentro de la carpeta posts. Te sugiero usar un esquema fecha-tema para llamar esos archivos. Evita usar espacios y caracteres latinos en esos temas. Para trabajar hay que crear un archivo index.qmd. Puedes hacerlo desde el menu: File $ $ New Quarto document…\nConfigura el encabezaddo de control con algo así como:\n---\ntitle: \"Descriptivo del contenido\"\nauthor: \"Tu Nombre y el de los autores involucrados\"\nlang: es\ndate: {{la fecha de publicación}}\ncategories: [colección de frases clave separadas por comas]\nimage: \"archivo de la imágen que deseas incluir como portada\"\ncode-fold: true\ncode-summary: \"muestra el escript:\"\nfig-cap-location: top\n---\nSi es de tu interés, aquí encontrarás muchos detalles interesanes sobre YAML."
  },
  {
    "objectID": "posts/2025-02-21-inicio/index.html#guardar-el-trabajo-con-la-intención-de-colaborar",
    "href": "posts/2025-02-21-inicio/index.html#guardar-el-trabajo-con-la-intención-de-colaborar",
    "title": "Los primeros pasos",
    "section": "Guardar el trabajo con la intención de colaborar",
    "text": "Guardar el trabajo con la intención de colaborar\nAhora ya tenemos el texto en nuestras máquinas, almacenado en casa. ¿Podemos hacer algo más para asegurar esos materiales y facilitar compartirlos con quienes queramos? Te sugiero considerar git y github para eso. Podemos imaginar que el espacio de almacenamiento en tu máquina es como una parcela de siembra, cada dato tiene coordenadas de localización y así los recuperas cuando los quieres. Lo que hace git es agregar una ventana de tiempo que te permite asomarte a la historia de lo que pasó en esas ubicaciones que te interesan.\n\n\nFuente: Final.doc en Piled Higher and Deeper por Jorge Cham, http://www.phdcomics.com\n\n\n\n\n¿Qué es Git?\n\n\n\n\n\n\nEs una aplicación diseñada por el iniciador del desarrollo de Linux, Linus Torvalds (Fig. 3). Git es un sistema eficiente confiable y distribuido de control de versiones. El control de versiones es simplemente el seguimiento y registro de los cambios que va teniendo un documento a lo largo del tiempo. El concepto distribuido se refiere a que el registro local que tengas en tu máquina o para el caso en cualquier número de máquinas, es un registro completo, clonado del proyecto. Estos repositorios locales plenamente funcionales permiten trabajar aún cuando no tengas acceso a Internet. Los autores realizan y registran su trabajo localmente y, cuando lo encuentren conveniente, sincronizan la copia local del repositorio con la del servidor. En la actualidad Git se ha convertido en el estándar mundial de facto para el control de versiones.\n\n\n\n\n\nFigura 3: Linus Torvalds\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActivar git\n\n\n\n\n\nPara activar git en tu proyecto tienes dos opciones:\n\nHacerlo desde el principio marcando la casilla respectiva al momento de crear el proyecto.\nUtilizar la biblioteca de herramientas auxiliares usethis.\n\nCon este comando creas lo necesario para usar git en tu proyecto.\n\n\nmuestra el escript:\nusethis::use_git()\n\n\nEn cualquier caso, ahora conviene verificar como está configurado el espacio de trabajo. En la ventana de consola puedes escribir los siguientes comandos para averiguar detalles de tu configuración.\nEsto te dirá como se llama la ventana de tiempo que has elegido definir como base de trabajo, puedes tener tantas ramas distintas como consideres, pero conviene que una sea la principal. Se solía llamar a esta rama master, pero ahora se ha considerado que la !esclavitud ya ha sido abolida!, así que hay una tendencia a mejor llamarle main. En realidad puedes llamarla como quieras.\n\n\nmuestra el escript:\nusethis::git_default_branch()\n\n\nSi quieres configurar tu instalación de RStudio para que siempre defina la rama base como main, puedes usar elsiguiente comando. Aunque esto sólo actuará para futuros proyectos, no cambiará nada en los que tienes ya creados hasta este momento.\n\n\nmuestra el escript:\nusethis::git_default_branch_configure(name = \"main\")\n\n\nSi lo que quieres es modificar la rama principal del proyecto con el que estas trabajando y que ya tienes abierto, este es el comando que te ayudará. En este ejemplo uso lo que es ya práctica común, migrar de master a main, pero puedes tomar tus propias preferencias sin ningún problema, aunque obviamente la parte from debe ser la existente que deseas modificar.\n\n\nmuestra el escript:\nusethis::git_default_branch_rename(from = \"master\", to = \"main\")\n\n\nNo todos los archivos que están en el espacio de trabajo son realmente de interés como para seguir su historia en el tiempo y podría haber también cosas que nunca deberían estar registradas en un sistema que te expone al acceso público generalizado: claves personales, tokens, identificadores de archivos privados, etc. Aunque ante esto no hay mejor cosa que ser prudente y estar atentos, existe la función vacunar que busca ayudarte a evitar estos problemas. Para activar esta ayuda en tu proyecto puedes usar este comando.\n\n\nmuestra el escript:\nusethis::git_vaccinate()\n\n\nEsto pone ya en operación las capacidades de git en tu máquina. Para usarlas debes dirigirte a la pestaña respectiva. Con la función Commit generas el registro del estado de los archivos del proyecto al momento de activar el comando. Para operar esto debes decidir que archivos enviar al registro histórico, marcados como staged. Al apretar el botón Commit aparecerá una ventana en donde se reportan los detalles de lo que estas registrando. Cada Commit requiere anotar un mensaje descriptivo breve de lo que contiene el “corte”. Una vez que está todo resuelto, hay que apretar el botón Commit en esa pantalla y esperar algunos segundos a que termine el proceso de registro en la base de datos respectiva.\n\n\n\n\n\n\n\n\n\nEnviar el repositorio git a la nube\n\n\n\n\n\nAhora estas preparada o preparado para enviar tu trabajo a la nube, lo haremos con el servicio de Github, aunque hay varias opciones (como gitlab por ejemplo).\nNuevamente nos ayudará usethispara hacer esto. Lo primero es que para comunicar RStudio con Github necesitas registrar un token de ese servicio en tu equipo. El comando para esto es:\n\n\nmuestra el escript:\nusethis::create_github_token()\n\n\nEsto te lleva a la página de Github en la que hay que generar el token. Hay que responder las preguntas que te haga la página, aunque todo estará prellenado con lo normalmente necesario. Cuando esté a tu gusto, aprieta el botón respectivo. Aparecerá una nueva pantalla con el token que habrá que copiar al portapapeles (ctr-c en Windows). Este token que aparece, es la única vez que lo verás, por lo que conviene copiarlo al portapapeles de tu máquina (ctrl-c en windows) y tenerlo a buen resguardo por lo pronto. En seguida hay que ejecutar este otro comando en la consola de RStudio\n\n\nmuestra el escript:\ngitcreds::gitcreds_set()\n\n\nSi es la primeta vez que registras un token te pedirá que lo registres, dale paste (ctrl-v en Windows). Si ya tienes un registro dado de alta, te informará sobre lo que tiene anotado y te dará oportunidad de decidir qué quieres hacer en seguida.\nTodo está ya preparado, sólo falta poner en uso el vínculo que acabamos de crear. Para eso bastará con decir:\n\n\nmuestra el escript:\nusethis::use_github()\n\n\nPor cierto, este es el comando qe necesitarán en lo sucesivo para vincular cualquier nuevo proyecto a tt centta ed Github, siempre y cuando tu token este vigente.\n\n\n\n\n\n\n\n\n\nUna vez teminadas estas tarea puedes ir a la pestaña git cuando lo consideres conveniente y ordenar a RStudio que envié todos los commits que están pendientes hasta el momento a Github. Para hacerlo deberás apretar el botón Push. Antes de hacerlo siempre es conveniente pedirle a git que se ponga al día con lo que ya está registrado en la nube, esto lo logras con el botón pull. Esto nos lleva a una rutina de operación con git que se resume en la figura siguiente.\n\n\n\n\n\n\n\n\n\n\n\n\nResumen rutinario para usar git\n\n\n\n\n\nClaro está que configurar todo la primera vez es un poco complicado, pero si todo está listo: git instalado, cuenta de Github, token activado, etc. la operación cotidiana es mucho más sencilla.\nEn la figura se ilustran las dos rutas para hacerlo en RStudio.\n\nEvidentemete, si seguiste la ruta azul, tu repositorio ya existe en Github, una vez qe hayas clonado el repositorio en t máquina todo queda listo para concentrarte en escriibir. Si optaste por la ruta verde, entonces deberás crear un nuevo repositorio en Github. Para hacerlo Utiliza usethis en la pestaña de consola.\n\n\nmuestra el escript:\nusethis::use_github()\n\n\nEso es todo.\n\n\n\n\n\n\n\n\n\n\n\nPublicar tu Blog con ayuda de Netlify\n\n\n\n\n\nHay que indicarle a Github que de acceso a Netlify para que tome continuamente lo necesario. La meta es que construya un sitio Web con tu contenido y lo publique en Internet. Los pasos que hay que seguir para esta primera interacción son los siguiente.\nIniciar la vinculación con Github seleccionando la opción que ofrece importar los documentos desde un repo Git. Esto dará la opción de utilizar Github como origen de datos, entre otras posibilidades.\n\nEl Siguiente paso es autorizar a Netlify a acceder a Github a través de tu cuenta, así como los específicos del repositorio que te interesa vincular. Esto también implica instalar una aplicación de vínculo entre Netlify y Github dentro de tu cuenta.\n\nSi todo ocurrió sin problemas, tendrás ahora en Github, en el menú de aplicaciones (Avatar→ Settings→ Applications), un botón que te permitirá configurar el vínculo con Netlify según tus requerimientos. También podrás ver los repos que hayas autorizado desde Netlify.\n\nCreación de un nuevo sitio a publicar\n\nEn Netlify:\n\nDesde la opción team o site puedes generar un nuevo sitio.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCuando aprietas el boton de añadir sitio, aparecerá una nueva pantalla que tiene tres secciones. Se trata de los atributos que tendrás que proporcionar para darle presencia en Internet a tu proyecto y algunos otros atributos que definen como se producirá y actualizará continuamente. Estas operaciones es poco probable que las vuelvas a ver, una vez que tu proyecto esté en producción, aunque desde luego estarán siempre ahí por si deseas hacer ajustes.\n\n¿Qué nombre le daras?\nDeberás elegir un nombre que se convertirá en una URL para acceder a tu proyecto. Puede ser cualquier cosa que desees, pero debe ser único. En esta sección puedes escribir nombres y verificar que estén disponibles\n\n\n\n¿Qué hará Netlify para operar tu sitio?\nEs una colección de atributos para indicarle a Netlify dónde conseguir los documentos y como manejarlos. En nuestro caso, muy simple, básicamente hay que decirle en donde están los documentos que Quarto, con ayuda de pandoc, ha renderizado. Si no has cambiado nada en _quarto.yml la rama que estamos usando aquí para que Git los registre es main y, en ella el directorio de producción se llama **_site**. Por favor verifica el contenido de esto para ayudarte a comprender mejor lo que estás haciendo.\n\n\n\n¿Todo listo? ¡a producción!\nEn nuestro caso no hay más que hacer, Netlify tiene información suficiente para encargarse de publicar tu proyecto continuamente. Incorporará los cambios que hagas en RStudio en la rama principal. Lo hará automáticamente cada vez que envíes tus cambios a Github.\n\nSi todo salió bien, en este momento ya debe estar tu proyecto publicado y accesible para cualquier lector del mundo que lo localice y se interese en su contenido.\n\n\n\n\n\n\n\n\n\n\n\nFinalmente ¿Cómo quedá todo organizado?\n\n\n\n\n\n\nTienes un proyecto en tu máquina\nEstá vinculado con tu cuenta en Github\nEstán vinculados Github y Netlify\n\nAhora, sólo queda crear el contenido del Blog. Recuerda usar un directorio para cada nueva contribución dentro de la carpeta posts. Te sugiero usar un esquema fecha-tema para llamar esos archivos. Evita usar espacios y caracteres latinos en los temas. Para trabajar hay que crear un archivo index.qmd. Puedes hacerlo desde el menú: File $ $ New Quarto document….\nConfigura el encabezado de control con algo así como:\n---\ntitle: \"Descriptivo del contenido\"\nauthor: \"Tu Nombre y el de los autores involucrados\"\nlang: es\ndate: {{la fecha de publicación}}\ncategories: [colección de frases clave separadas por comas]\nimage: \"archivo de la imágen que deseas incluir como portada\"\ncode-fold: true\ncode-summary: \"muestra el escript:\"\nfig-cap-location: top\n---\nSi es de tu interés, aquí encontrarás muchos detalles interesanes sobre YAML."
  },
  {
    "objectID": "posts/2025-02-21-inicio/index.html#resumen-rutinario-para-usar-git",
    "href": "posts/2025-02-21-inicio/index.html#resumen-rutinario-para-usar-git",
    "title": "Los primeros pasos",
    "section": "Resumen rutinario para usar git",
    "text": "Resumen rutinario para usar git\nClaro está que configurar todo la primera vez es un poco complicado, pero si todo está listo: git instalado, cuenta de Github, token activado, etc. la operación cotidiana es mucho más sencilla.\nEn la figura se ilustran las dos rutas para hacerlo en RStudio.\n\nEvidentemete, si seguiste la ruta azul, tu repositorio ya existe en Github, una vez qe hayas clonado el repositorio en t máquina todo queda listo para concentrarte en escriibir. Si optaste por la ruta verde, entonces deberás crear un nuevo repositorio en Github. Para hacerlo Utiliza usethis en la pestaña de consola.\n\n\nmuestra el escript:\nusethis::use_github()\n\n\nEso es todo."
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#narrar-y-escribir",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#narrar-y-escribir",
    "title": "Ciencia Abierta:",
    "section": "Narrar y Escribir",
    "text": "Narrar y Escribir\n\nFrente a la oralidad, que favorece las formas e ideas tradicionales, reconocibles para el que escucha, el discurso alfabetizado puede abrirse a horizontes desconocidos porque el lector tiene tiempo para asimilar y meditar con tranquilidad las ideas novedosas. En los libros caben planteamientos excéntricos, voces de identidades individuales, desafíos a la tradición.\n\n\n\n\n\n\n\n \n\n\nIrene Vallejo"
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#escribir-y-la-importancia-de-reflexionar",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#escribir-y-la-importancia-de-reflexionar",
    "title": "Ciencia Abierta:",
    "section": "Escribir y la importancia de reflexionar",
    "text": "Escribir y la importancia de reflexionar\nSócrates temía que, por culpa de la escritura se abandonaría el esfuerzo de la propia reflexión. Lo dice mediante la conversación entre Thamus (rey de Egipto) y el dios Theuth:\n\niOh Theuth!, por ser el padre de la escritura le atribuyes ventajas que no tiene. Es olvido lo que producirán las letras en quienes las aprendan, descuidarán la memoria. Fiándose de los libros, llegarán al recuerdo desde fuera. Será, por tanto, apariencia de sabiduría, no autenticidad lo que la escritura dará a los hombres; y, cuando haya hecho de ellos entendidos en todo sin verdadera instrucción, su compañía será difícil de soportar, porque se creerán sabios en lugar de serlo.\n\n\n\n\n\n\n\n \n\n\nIrene Vallejo"
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#section-2",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#section-2",
    "title": "Ciencia Abierta:",
    "section": "",
    "text": "https://www.softwareheritage.org/"
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#preocupados-doomsday-clock",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#preocupados-doomsday-clock",
    "title": "Ciencia Abierta:",
    "section": "¿Preocupados?: Doomsday clock",
    "text": "¿Preocupados?: Doomsday clock"
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#crisis-de-reproducibiliad",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#crisis-de-reproducibiliad",
    "title": "Ciencia Abierta:",
    "section": "Crisis de reproducibiliad",
    "text": "Crisis de reproducibiliad\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFuente: 1,500 scientists lift the lid on reproducibility. Nature (2016)"
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#significados-de-ciencia-abierta",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#significados-de-ciencia-abierta",
    "title": "Ciencia Abierta:",
    "section": "Significados de ciencia abierta",
    "text": "Significados de ciencia abierta\n\n\n\n\n\n\n\nPublicación abierta\nDatos abiertos\nPre-registro\nConsentimiento libre, previo e informado\nCiencia ciudadana\nInvestigación acción"
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#ciencia-abierta-institucionalizada",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#ciencia-abierta-institucionalizada",
    "title": "Ciencia Abierta:",
    "section": "Ciencia abierta institucionalizada",
    "text": "Ciencia abierta institucionalizada\n\n\n\n\n\n\n\nDerecho humano a la ciencia\nRepositorios nacionales de publicaciones abiertas\nRepositorios nacionales de datos abiertos\nMétricas y reconocimiento a las personas\nAcuerdo de Escazú"
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#declaración-de-panamá",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#declaración-de-panamá",
    "title": "Ciencia Abierta:",
    "section": "Declaración de Panamá",
    "text": "Declaración de Panamá\n\n\n\n\n\n\n\nEntiende que el conocimiento es un bien común.\nConfía en el papel de la ciencia como motor de la democracia, la libertad y la justicia social en el momento histórico actual.\nQuiere más ciencia, que debe ser abierta.\nAvanza hacia modelos de colaboración entre Academia-Ciudadanía-Estado-Empresa.\nAfirma que abrir la ciencia exige ir más allá del acceso abierto.\nInsta a que la sociedad recupere el liderazgo.\nAfirma que los ciudadanos tienen derecho a producir y beneficiarse de la ciencia, la tecnología y la innovación.\n\n\n\n \n\n\n\n\n\n\nFuente: Declaración de Panamá"
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#section-4",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#section-4",
    "title": "Ciencia Abierta:",
    "section": "",
    "text": "Ciencia abierta y bienestar sustentable\n\n\n\n\n\n\n\nBienestar sustentable\nArticulación de saberes, capacidades y compromisos\nInteligencia artificial interpretable\n\n\n\n\n\n\n\n\n\n\n\n\nFuente: Costanza, R. (2020). Ecological Economics, 168, 106484."
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#la-ciencia-abierta-que-queremos",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#la-ciencia-abierta-que-queremos",
    "title": "Ciencia Abierta:",
    "section": "La ciencia abierta que queremos",
    "text": "La ciencia abierta que queremos\n\n\n\n\n\n\n\nCooperativa\nTrazable\nreproducible\nVerificable con datos\nIncluyente (científicos y no científicos)\nDatos abiertos\nReflexiva\n\n\n\n\n\n\nFuente: Equihua, M. y Pérez-Maqueo, O. (2024).Ciencia abierta desde el Inecol. Eco-lógico"
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#cómo-ponerla-en-práctica",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#cómo-ponerla-en-práctica",
    "title": "Ciencia Abierta:",
    "section": "Cómo ponerla en práctica",
    "text": "Cómo ponerla en práctica\n\n\n\n\n\n\n\nCambio cultural profundo\nTransformar viejos hábitos\nAprender nuevas habilidades\nReaprender a cooperar\nCambios institucionales\nAbierta y no monopólica\nDatos abiertos FAIR"
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#consecuencias-imprevistas",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#consecuencias-imprevistas",
    "title": "Ciencia Abierta:",
    "section": "¿Consecuencias imprevistas?",
    "text": "¿Consecuencias imprevistas?\n\n\n\n\n\nFuente: https://www.nature.com/articles/d41586-022-00724-0"
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#costos-de-procesamiento-de-artículos-apc",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#costos-de-procesamiento-de-artículos-apc",
    "title": "Ciencia Abierta:",
    "section": "Costos de Procesamiento de Artículos (APC)",
    "text": "Costos de Procesamiento de Artículos (APC)\n\n\n\n\n\n\n\nEl modelo APC demolió parte del muro de pago que bloqueaba el acceso de los lectores a las publicaciones.\nAhora a levantado un nuevo muro de pago en el otro extremo de la cadena, al bloquear el acceso de los autores menos privilegiados a la publicación."
  },
  {
    "objectID": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#lo-no-fair",
    "href": "posts/2025-02-28-contenido/pres-ciencia-abierta.html#lo-no-fair",
    "title": "Ciencia Abierta:",
    "section": "Lo No-FAIR",
    "text": "Lo No-FAIR\n\n\n\n\n\n\nDebemos ser especialmente sensibles a las formas en que las políticas de Ciencia Abierta pueden en realidad empeorar las desigualdades existentes."
  },
  {
    "objectID": "posts/2025-02-28-contenido/index.html#platiquemos-sobre-tus-intereses",
    "href": "posts/2025-02-28-contenido/index.html#platiquemos-sobre-tus-intereses",
    "title": "¿Qúe puedo incluir en mis documentos?",
    "section": "Platiquemos sobre tus intereses",
    "text": "Platiquemos sobre tus intereses\nTu Blog contendrá alguno o varios de los siguientes componentes:\n\nTablas de datos.\nGráficas.\nMapas.\nAnálisis de datos geográficos.\nAnálisis de series de tiempo.\nModelos matemáticos.\nAnálisis estadísticos.\nAnálisis de datos moleculares.\nAnálisis de imágenes.\nAnálisis de audio.\nAlguna otra cosa que sea de tu interés.\n\nSugiero hacer una reflexión sobre esto y considerar también de qué manera se obtendrán los datos, procesarán y presentarán.\n\nAlgunas ideas para animar la charla\nUna cosa que podría ser de tu interés es cosechar datos del Internet. R tiene bibliotecas bbastante competenes para hacerlo, pero te invito primero a pensarlo y precisar la idea, para entonces dedicar alguna sesión del taller en el futuro próximo all tema. Junto con esto va una reflexión sobre datos abiertos que tengo previsto tratar y junto con esto alguunos asuntos sobre derechos de autor y licenciamiento del contenido que tu mismo producirás. En tanto resolvemos esta interés, una cosa más sencilla es trabajar con datos que ya tengo en mi poseción, es decir un Excel o documento semejante en mi máquina."
  },
  {
    "objectID": "posts/2025-02-28-contenido/index.html#obtención-de-datos-abiertos",
    "href": "posts/2025-02-28-contenido/index.html#obtención-de-datos-abiertos",
    "title": "¿Qúe puedo incluir en mis documentos?",
    "section": "Obtención de Datos Abiertos",
    "text": "Obtención de Datos Abiertos\nLas fuentes de datos, especialmente hoy, pueden ser muy variadas. Desde los datos que conseguimos directamente en campo a partir de mediciones directas o encuestas, hasta los datos que podemos obtener de fuentes de datos abiertos. Considero que será de tu interés explorar las distintas formas de interacción que las fuentes de datos implican para nuestros procesos de producción científica reproducible.\n\n\nManejo de claves confidenciales\nUn tema importante a cuidar es preservar la confidencialidad de claves, tokens y otras formas de identificación personal que puede implicar el proceso de acceso a datos en línea. Así que veremos eso como primer asunto. Queda claro que debemos evitar por todos los medios evitar poner esa información en carpetas o código que pueden acabar siendo registradas en Github en nuestro repositorio público. Haberte vacunado con usethis::git_vaccinate() ayuda en gran medida, pero desde luego no es remplazo a estar atentos a lo que estamos haciendo. La estrategia de registro de datos confidenciales que te propongo es la biblioteca keyring. Esta biblioteca accede al sistema de almacenamiento de credenciales de tu máquina desde R. La describen como una API Independiente de la Plataforma para acceder al depósito de credenciales del sistema operativo de tu máquina. Este sitio explica que es una API (Application Programming Interface). Actualmente keyring soporta: Keychain en macOS, Credential Store wn Windows, the Secret Service API en Linux, soluciones simples (sin plataforma específica) desarrollados con variables de sistema o archivos encristalados e incluso ofrece la posibilidad de desarrollar algunas soluciones propias con sencillez. En nuestro caso, básicamente usaremos dos funciones de esta biblioteca. Primero y desde la pantalla de Consola ejecuta:\n\nkey_set(service = \"[dale un nombre]\", username = \"[el que desees]\")\n\n\nEsto hará el registro de tus credenciales en tu máquina, fuera de la vista. A partir de ese momento y mientras no elimines el registro explícitamente, estarán disponibles los datos que hayas registrado y los podrás obtener con:\n\nkey_get(service = \"[dale un nombre]\", username = \"[el que desees]\")\n\n\nEsta última línea recupera los datos confidenciales, así que deberás cuidar usar las credenciales de inmediato y procurar no guardarlas y menos desplegarlas o habilitar medios para mostrarlas, durante el proceso.\nVeamos un primer ejemplo con INEGI. Te sugiero ir a https://www.inegi.org.mx/servicios/api_indicadores.html al constructor de consultas, en donde INEGI nos muestra un ejemplo de como acceder a los datos abiertos que compilan, mantienen y custodian. Deberás obtener un token personal, el mismo sitio de INEGI te dirá como obtenerlo. El ejemplo muestra como obtener datos de la serie histórica del indicador de la Población total de los Estados Unidos Mexicanos, en idioma español, en formato JSON. Una vez que los obtengamos mostraremos los datos en tablas y gráficas.\n\nLo primero que haremos es preparar el acceso a los datos con el token confidencial y obtenemos los datos, sin haber registrado la URL de acceso, pues como viste arriba, incluye tu token, así que habrá que manejarla con seguridad. El resultado de este código es una estruuctra de datos que ya no contiene información confidencial.\nLa siguiente tarea que haremos ahora es simplemente arreglar los datos y ponerlos de la manera que requiero. Los datos son actualmente una base de datos JSON, que es una estructura parecida a un diccionario jerárquico, que tiene una etiqueta seguida de los datos que le corresponden. Aquí te muestro un fragmento de los datos de INEGI que obtuvimos. Es la sección etiquetada como Header. Podemos ver que esta etiqueta tiene como contenido los datos Name y email, a su vez con sus respectivos datos.\n\n\nmuestra el escript:\ndescrip &lt;- fromJSON(datosGenerales[[1]])$Header\nprettify(toJSON(descrip))\n\n\n{\n    \"Name\": \"Datos compactos BISE\",\n    \"Email\": \"atencion.usuarios@inegi.org.mx\"\n}\n \n\n\n\n\nAhora haremos algunas operaciones para arreglar los datos del JSON en una tabla de tipo data.frame (tibble si optamos por una variante actual) en R. Los datos que nos interesan son los que están en la etiqueta Series y dentro de estas Series están las listas de OBSERVATIONS, que en este caso son 15.\n\n\nmuestra el escript:\n# junta todo en un gran texto corrido\nflujoDatos &lt;- paste(datosGenerales, collapse = \" \") \n\n# Obtiene la lista de observaciones \nflujoDatos &lt;- fromJSON(flujoDatos) # Convierte al JSON a una lista de R\nflujoDatos &lt;- flujoDatos$Series # Toma la sublista Series \nflujoDatos &lt;- flujoDatos[[1]][\"OBSERVATIONS\"]\n\ncat(\"\\nNúmero de observaciones: \", length(flujoDatos[[1]]),\n    \"\\n\\nDatos en cada observación:\\n\",\n    paste(\"   \", names(flujoDatos[[1]][[1]]), collapse = \"\\n\"), sep = \"\")\n\n\n\nNúmero de observaciones: 15\n\nDatos en cada observación:\n    TIME_PERIOD\n    OBS_VALUE\n    OBS_EXCEPTION\n    OBS_STATUS\n    OBS_SOURCE\n    OBS_NOTE\n    COBER_GEO\n\n\nAhora convierto lista de listas en un tabla con los datos de población y año de censado.\n\n\nmuestra el escript:\ndf1 &lt;- flujoDatos[[1]] %&gt;% \n      sapply(., c) %&gt;% \n      t() %&gt;% \n      as_tibble() %&gt;% \n      select(TIME_PERIOD, OBS_VALUE) %&gt;% \n      mutate(TIME_PERIOD = as.integer(TIME_PERIOD),\n             OBS_VALUE = as.integer(OBS_VALUE))\n\n\ndf1 %&gt;% flextable() %&gt;% \n        colformat_int(j = 1, big.mark = \"\") %&gt;% \n        set_header_labels(TIME_PERIOD = \"Año\", OBS_VALUE = \"Población\")\n\n\nAñoPoblación191015,160,369192114,334,780193016,552,722194019,653,552195025,791,017196034,923,129197048,225,238198066,846,833199081,249,645199591,158,290200097,483,4122005103,263,3882010112,336,5382015119,938,4732020126,014,024\n\n\nAhora podemos ver los datos como una gráfica apropiada para pulicación. Nos ayudará la biblioteca ggplot2\n\n\nmuestra el escript:\nlibrary(ggplot2)\n\nggplot(df1, aes(x = TIME_PERIOD, y = OBS_VALUE / 1000000)) +\n  geom_point(color = \"red\", size = 3, show.legend = FALSE) +\n  geom_line(color = \"blue\", show.legend = FALSE) +\n  ylab(\"Población (millones de habitantes)\") +\n  xlab(\"Año\")"
  },
  {
    "objectID": "posts/2025-02-28-contenido/index.html#contar-historias-con-números",
    "href": "posts/2025-02-28-contenido/index.html#contar-historias-con-números",
    "title": "¿Qúe puedo incluir en mis documentos?",
    "section": "Contar historias con números",
    "text": "Contar historias con números\nEsta es una tarea usualmente complicada. A lo mejor la lectura de lo que propone Stephen Few, nos puede ayudar a profundizar esta reflexión."
  },
  {
    "objectID": "posts/2025-02-28-contenido/index.html#datos-en-mi-equipo",
    "href": "posts/2025-02-28-contenido/index.html#datos-en-mi-equipo",
    "title": "¿Qúe puedo incluir en mis documentos?",
    "section": "Datos en Mi equipo",
    "text": "Datos en Mi equipo\nObviamente, la forma más sencilla de acceder a datos es cuando los tenemos en nuestro propio equipo. En este caso lo usual es que sea alguno de los formatos de Microsoft (Word o Excel) o algún formato genérico como los identificados como txt (texto plano) o csv (valores separados por comas). Puuede haber otras variantes de archivos de datos, como kml, GeoJson, GeoTIFF o shp (shape file) usuales en la gestión de datos geográficos. En Genómica está el formato fasta, que también cuenta con bibliotecas adecuadas en R. Hay una correspondiente variedad de recursos para leer todos estos tipos de datos en R así como para analizarlos y preparar resúmenes, modelos y gráficos de interés. A continuación veremos algunos ejemplos sencillos para tener una idea del proceso general. Para nuestros fines didácticos veamos como leer datos de Excel.\n\nDatos Excel\nTengo este archivo de datos obtenidos por D.L. Cunningham de la Universidad de Cornell. Son registros de masa corporal (g) de pollos de acuerdo con su posición en la jerarquía de picotazos (Tabla 1). Veamos los datos. En el procceso dde demostración también te comparto como construir una tabla en formato publicable con la biblioteca flextable. Otra posibilidad para trabajar tablas es la biblioteca DT, más orientada a construir tablas que serán utilizadas en forma interactiva.\n\n\nmuestra el escript:\npacman::p_load(tidyverse, ggplot2, readxl, flextable)\n\npollos_peso &lt;- read_excel(\"datos/peck_odr.xls\", skip = 2)\n\npollos_peso |&gt;\n  flextable() |&gt; \n  width(j = 2:8, width = 25, unit = \"mm\") |&gt; \n  set_header_labels(\"Jerarquía\\npor picoteo\" = \"Posición\",\n                    gallinero = \"Gallinero\",\n                    peso = \"Peso\\n(g)\")\n\n\n\n\nTabla 1: Jearquía de Picotazos\n\n\n\nPosiciónGallinero 1Gallinero 2Gallinero 3Gallinero 4Gallinero 5Gallinero 6Gallinero 711,8801,3001,6001,3801,8001,0001,68021,9201,7001,8301,5201,7801,7401,46031,6001,5001,5201,5201,3601,5201,76041,8301,8801,8201,3802,0002,0001,800\n\n\n\n\n\nLos datos están en un formato poco conveniente para un análisis general. Hagamos algunas operaciones para ponerlos en una forma más adecuada. Básicamente buscaremos cambiar del formato extendido, bueno para visualizar, a uno apilado, más apropiado para el análisis estadístico\n\n\nmuestra el escript:\npollos_peso &lt;- pollos_peso %&gt;%\n                 rename(jerarquia = `Jerarquía\\npor picoteo`) %&gt;% \n                 pivot_longer(cols = `Gallinero 1`:`Gallinero 7`, \n                              names_to = \"gallinero\",\n                              values_to = \"peso\") %&gt;% \n                 mutate(gallinero = factor(gallinero),\n                        jerarquia = as.integer(jerarquia)) %&gt;% \n                 arrange(gallinero)\n\n\n\nAprovecharé la nueva disposición para demostrar el uso de la biblioteca DT que define la fuuunción datatable y un montón de otros recursos para dar formato tabular y anotar los datos de interés.\n\n\n\nmuestra el escript:\nlibrary(DT)\n\npollos_peso |&gt; \n  datatable(colnames = c(\"Posición\", \"id-Gallinero\", \"Peso\")) \n\n\n\n\n\n\n\n\nOtra cosa que puedo hacer ahora es construir un gráfico con los datos utilizando la bibliotea ggplot2, muy capáz de producir gráficos atractivos, incluso como para publicaciones formales. Piensa en qué gráficos te gustaría inlcuir en el blog que estas construyendo. En este enlace encontrara una galería de gráficos que pueden ayudar a estimular tu imaginación e interés.\n\n\n\nmuestra el escript:\nggplot(pollos_peso, aes(x = jerarquia, y = peso)) +\n  geom_point(color = \"darkgreen\")\n\n\n\n\n\n\n\n\n\n\n¿qué análisis sugieres habría que hacer ahora? ¿Cómo lo presentarías para asegurar que tu proceso analítico sea reproducible?"
  },
  {
    "objectID": "posts/2025-02-28-contenido/index.html#un-bonito-mapa",
    "href": "posts/2025-02-28-contenido/index.html#un-bonito-mapa",
    "title": "¿Qúe puedo incluir en mis documentos?",
    "section": "Un bonito mapa",
    "text": "Un bonito mapa\n¿Piensas que hacer mapas impactantes es cosa de una élite entrenada en GIS? Quizás la belleza de muchos mapas que encontramos por ahí justifica pensar así. Pero ahora podemos aspirar a incluir hermosos mapas en nuestros documentos, pues el acceso a recursos abiertos muy competentes de mapeo ha camiado mucho. En R tenemos ahora bibliotecas como sf, raster, terra, leaflet, ggplot2 y tmap, además del software especializado QGIS,\nCon leaflet puedes incluir mapas interactivos es bastante sencillo. Veamos como empezar con esta biblioteca con unas breves instrucciones.\n\n\nmuestra el escript:\nlibrary(leaflet) # cargar la biblioteca requerida.\n\nbasemap &lt;- leaflet() %&gt;%\n  # ubicación de la zona de interés y nivel de zoom inicial\n  setView(lng = -96.91841, lat = 19.515157, zoom = 20) %&gt;% \n\n    # Añade proveedor de mapa\n  addProviderTiles(\n    \"OpenStreetMap\",\n    # Dale un nombre a la capa\n    group = \"Mapa-OpenStreet\"\n  )\n\n# despliega el mapa\nbasemap \n\n\n\n\n\n\n   \nAgregar capas, marcadores, etc. Tampoco es muy complicado. Veamos un ejemplo.\n   \n\n\nmuestra el escript:\nicon.fa &lt;- makeAwesomeIcon(icon = \"bicycle\", markerColor = \"green\",\n                           library = \"fa\",\n                           iconColor = \"red\")\n\n\nmap_1 &lt;- basemap %&gt;% \n  addProviderTiles(\"Esri.WorldImagery\", \n                   group = \"ESRI\") %&gt;% \n  addWMSTiles(\n    \"http://gaia.inegi.org.mx/NLB/tunnel/wms/wms61?\",\n    layers = \"Ortofotos\",\n    options = WMSTileOptions(format = \"image/png\", transparent = TRUE),\n    attribution = \"Inegi\",\n    group = \"Inegi-ortofoto\") %&gt;% \n  addWMSTiles(\n    \"http://gaia.inegi.org.mx/NLB/tunnel/wms/wms61?\",\n    layers = \"c407\",\n    options = WMSTileOptions(format = \"image/png\", transparent = TRUE),\n    attribution = \"Inegi\",\n    group = \"Humedad del suelo\") %&gt;% \n  addAwesomeMarkers(\n    lat = 19.5152,\n    lng = -96.91841,\n    label = \"Starting point\",\n    icon = icon.fa\n  ) %&gt;% \n\n  # Layers control\n  addLayersControl(\n    baseGroups = c(\n      \"Mapa-OpenStreet\",\n      \"ESRI\",\n      \"Inegi-ortofoto\",\n      \"Humedad del suelo\"\n    ),\n    options = layersControlOptions(collapsed = FALSE)\n  )\n\nmap_1\n\n\n\n\n\n\n\n\n\nOtra posibilidad para producir documentos con mapas más bien de tipo impreso es la biblioteca tmap podemos hacer cosas como las siguiente. Usaremos los datos contenidos en el paquete spData para ejemplificar. Aquí está un tutorial sobre esta biblioteca.\n\n\n\n\nmuestra el escript:\npacman::p_load(tmap, spData)\n\ndata(\"urban_agglomerations\")\n\nurb_1970_2030 &lt;-  urban_agglomerations %&gt;% \n  filter(year %in% c(1970, 1990, 2010, 2030))\n\ndata(\"World\")\n\ntm_shape(world) +\n  tm_polygons(fill = \"lightblue\") +\n  tm_crs(\"auto\") +\n  tm_shape(urb_1970_2030, ) +\n  tm_symbols(fill = \"black\", \n             col = \"white\", \n             size = \"population_millions\", \n             size.legend = tm_legend(title = \"Población (millones)\")) +\n  tm_facets_wrap(by = \"year\", nrow = 2)\n\n\n\n\n\n\n\n\n\n\nA pesar de lo dicho arriba, con esta biblioteca también se puede incursionar en preparar productos geográficos dinámicos, como sería una animación.\n\n\n\nCreating frames\n\n\n\nCreating animation\nAnimation saved to C:\\Users\\equih\\0 Versiones\\2025-Ciencia-Reproducible\\posts\\2025-02-28-contenido\\img\\urb_anim.gif"
  },
  {
    "objectID": "posts/2025-02-28-contenido/index.html#un-vido",
    "href": "posts/2025-02-28-contenido/index.html#un-vido",
    "title": "¿Qúe puedo incluir en mis documentos?",
    "section": "Un Vido",
    "text": "Un Vido"
  },
  {
    "objectID": "posts/2025-02-28-contenido/index.html#un-video",
    "href": "posts/2025-02-28-contenido/index.html#un-video",
    "title": "¿Qúe puedo incluir en mis documentos?",
    "section": "Un Video",
    "text": "Un Video"
  },
  {
    "objectID": "posts/2025-02-28-contenido/index.html#incluir-videos",
    "href": "posts/2025-02-28-contenido/index.html#incluir-videos",
    "title": "¿Qúe puedo incluir en mis documentos?",
    "section": "Incluir videos",
    "text": "Incluir videos\nSi por cuaquier razón encuentras justificado o importante mostrar algo que está forma de video, es facilmente realizable agregarlo a tu blog. Tan simple como poner algo semejante a esto."
  }
]